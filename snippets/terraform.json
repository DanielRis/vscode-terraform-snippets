{
    "aws_ami": {
        "prefix": "tf-aws_ami",
        "description": "aws_ami - Use this data source to get the ID of a registered AMI for use in other resources.",
        "body": [
            "data \"aws_ami\" \"${ami-name}\" {",
            "\tmost_recent = true",
            "\texecutable_users = [\"self\"]",
            "\tfilter {",
            "\t\tname = \"owner-alias\"",
            "\t\tvalues = [\"amazon\"]",
            "\t}",
            "\tfilter {",
            "\t\tname = \"name\"",
            "\t\tvalues = [\"amzn-ami-vpc-nat*\"]",
            "\t}",
            "\towners = [\"self\"]",
            "}"
        ]
    },
    "aws_availability_zones": {
        "prefix":"tf-aws_availability_zones",
        "description": "aws_ecs_container_definition - The Availability Zones data source allows access to the list of AWS Availability Zones which can be accessed by an AWS account within the region configured in the provider.",
        "body": [
            "# State can be either: available, information, impaired, or unavailable",
            "data \"aws_availability_zones\" \"available\" {}"
        ]
    },
    "aws_caller_identity": {
        "prefix":"tf-aws_caller_identity",
        "description": "aws_caller_identity - Use this data source to get the access to the effective Account ID in which Terraform is working.",
        "body": [
            "data \"aws_caller_identity\" \"current\" { }\n",
            "output \"account_id\" {",
            "\tvalue = \"\\${data.aws_caller_identity.current.account_id}\"",
            "}"
        ]
    },
    "aws_cloudformation_stack": {
        "prefix":"tf-aws_cloudformation_stack",
        "description": "aws_cloudformation_stack - The CloudFormation Stack data source allows access to stack outputs and other useful data including the template body..",
        "body": [
            "data \"aws_cloudformation_stack\" \"network\" {",
            "   name = \"${my-network-stack}\"",
            "}\n",
            "resource \"aws_instance\" \"${web}\" {",
            "   ami = \"${ami-abb07bcb}\"",
            "   instance_type = \"${t1.micro}\"",
            "   subnet_id = \"\\${data.aws_cloudformation_stack.network.outputs[\"SubnetId\"]}\"",
            "   tags {",
            "       Name = \"${HelloWorld}\"",
            "   }",
            "}"
        ]
    },
    "aws_ecs_container_definition": {
        "prefix":"tf-aws_ecs_container_definition",
        "description": "aws_ecs_container_definition - The ECS container definition data source allows access to details of a specific container within an AWS ECS service.",
        "body": [
            "data \"aws_ecs_container_definition\" \"ecs-${name}\" {",
            "   task_definition = \"${aws_ecs_task_definition.${name}.id}\"",
            "   container_name = \"${name}\"",
            "}"
        ]
    },
    "aws_elb_service_account": {
        "prefix":"tf-aws_elb_service_account",
        "description": "aws_elb_service_account - Use this data source to get the Account ID of the AWS Elastic Load Balancing Service Account in a given region for the purpose of whitelisting in S3 bucket policy.",
        "body": [
            "data \"aws_elb_service_account\" \"${main}\" { }\n",
            "# Example\n",
            "resource \"aws_s3_bucket\" \"elb_logs\" {",
            "   bucket = \"${my-elb-tf-test-bucket}\"",
            "   acl = \"private\"",
            "   policy = <<POLICY",
            "{",
            "   \"Id\": \"Policy\",",
            "   \"Version\": \"2012-10-17\",",
            "   \"Statement\": [",
            "   {",
            "       \"Action\": [",
            "           \"s3:PutObject\"",
            "       ],",
            "       \"Effect\": \"Allow\",",
            "       \"Resource\": \"arn:aws:s3:::my-elb-tf-test-bucket/AWSLogs/*\",",
            "       \"Principal\": {",
            "           \"AWS\": [",
            "               \"\\${data.aws_elb_service_account.${main}.id}\"",
            "           ]",
            "       }",
            "   }",
            "   ]",
            "}",
            "POLICY",
            "}\n",
            "resource \"aws_elb\" \"${bar}\" {",
            "   name = \"${my-foobar-terraform-elb}\"",
            "   availability_zones = [\"${us-west-2a}\"]\n",
            "   access_logs {",
            "       bucket = \"\\${aws_s3_bucket.elb_logs.bucket}\"",
            "       interval = 5",
            "   }\n",

            "   listener {",
            "       instance_port = 8000",
            "       instance_protocol = \"http\"",
            "       lb_port = 80",
            "       lb_protocol = \"http\"",
            "   }",
            "}"
        ]
    },
    "aws_iam_policy_document": {
        "prefix":"tf-aws_iam_policy_document",
        "description": "aws_iam_policy_document - Generates an IAM policy document in JSON format.",
        "body": [
            "data \"aws_iam_policy_document\" \"${example}\" {",
            "   statement {",
            "       sid = \"1\"",
            "       actions = [",
            "           \"s3:ListAllMyBuckets\",",
            "           \"s3:GetBucketLocation\",",
            "       ]",
            "       resources = [",
            "           \"arn:aws:s3:::*\",",
            "       ]",
            "   }\n",
            "   statement {",
            "       actions = [",
            "           \"s3:ListBucket\",",
            "       ]",
            "       resources = [",
            "           \"arn:aws:s3:::\\${var.s3_bucket_name}\",",
            "       ]",
            "       condition {",
            "           test = \"StringLike\"",
            "           variable = \"s3:prefix\"",
            "           values = [",
            "               \"\",",
            "               \"home/\",",
            "               \"home/&{aws:username}/\",",
            "           ]",
            "       }",
            "   }\n",
            "   statement {",
            "       actions = [",
            "           \"s3:*\",",
            "       ]",
            "       resources = [",
            "           \"arn:aws:s3:::\\${var.s3_bucket_name}/home/&{aws:username}\",",
            "           \"arn:aws:s3:::\\${var.s3_bucket_name}/home/&{aws:username}/*\",",
            "       ]",
            "   }",
            "}\n",

            "resource \"aws_iam_policy\" \"${example}\" {",
            "   name = \"example_policy\"",
            "   path = \"/\"",
            "   policy = \"\\${data.aws_iam_policy_document.${example}.json}\"",
            "}"
        ]
    }
}