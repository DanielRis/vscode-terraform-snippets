{
    "variable": {
        "prefix": "tf-variable",
        "description": "Define variables.",
        "body": [
            "variable \"${myVariable}\" { }"
        ]
    },
    "variable-default": {
        "prefix": "tf-variable-default",
        "description": "Define variables with default",
        "body": [
            "variable \"${myVariable}\" {",
            "   default =   \"\"",
            "}"
        ]
    },
    "output": {
        "prefix": "tf-output",
        "description": "Outputs are a way to tell Terraform what data is important.",
        "body": [
            "output \"${myOutput}\" {",
            "   value = \"\"",
            "}"
        ]
    },
    "module": {
        "prefix": "tf-module",
        "description": "Modules in Terraform are self-contained packages of Terraform configurations that are managed as a group.",
        "body": [
            "module \"${myModuleName}\" {",
            "   source = \"\"",
            "}"
        ]
    },
    "resource": {
        "prefix": "tf-resource",
        "description": "define a provisioner.",
        "body": [
            "resource \"\" \"${myResourceName}\" {\n",
            "}"
        ]
    },
    "provider": {
        "prefix": "tf-provider",
        "description": "define a provider.",
        "body": [
            "provider \"${aws}\" {",
            "   access_key = \"AWS ACCESS KEY\"",
            "   secret_key = \"AWS SECRET KEY\"",
            "   region = \"AWS REGION\"",
            "}"
        ]
    },
    "depends_on": {
        "prefix": "tf-depends_on",
        "description": "Define explicit dependencies.",
        "body": [
            "depends_on = [\"${dependsOn}\"]"
        ]
    },
    "module-github": {
        "prefix": "tf-module-github",
        "description": "Define a module with github source.",
        "body": [
            "module \"${myModuleName}\" {",
            "   source = \"github.com/username\"",
            "}"
        ]
    },
    "module-github-private": {
        "prefix": "tf-module-github-private",
        "description": "Define a module with github with private source.",
        "body": [
            "module \"${myModuleName}\" {",
            "   source = \"git::https://MACHINE-USER:MACHINE-PASS@github.com/username\"",
            "}"
        ]
    },
    "module-bitbucket": {
        "prefix": "tf-module-bitbucket",
        "description": "Define a module with BitBucket source.",
        "body": [
            "module \"${myModuleName}\" {",
            "   source = \"bitbucket.org/username\"",
            "}"
        ]
    },
    "module-git": {
        "prefix": "tf-module-git",
        "description": "Define a module with genertic Git source.",
        "body": [
            "module \"${myModuleName}\" {",
            "   source = \"git://\"",
            "}"
        ]
    },
    "module-mercurial": {
        "prefix": "tf-module-mercurial",
        "description": "Define a module with Mercurial source.",
        "body": [
            "module \"${myModuleName}\" {",
            "   source = \"hg::http://\"",
            "}"
        ]
    },
    "module-s3": {
        "prefix": "tf-module-s3",
        "description": "Define a module with S3 source.",
        "body": [
            "module \"${myModuleName}\" {",
            "   source = \"s3::https://\"",
            "}"
        ]
    },
    "provisioner-connection": {
        "prefix": "tf-provisioner-connection",
        "description": "Define a connection provisioner",
        "body": [
            "# Copies the file as the root user using SSH",
            "provisioner \"file\" {",
            "   source      = \"conf/myapp.conf\"",
            "   destination = \"/etc/myapp.conf\"",
            "   connection {",
            "       type        = \"ssh\"",
            "       user        = \"root\"",
            "       password    = \"samplePasswordHere\"",
            "   }",
            "}"
        ]
    },
    "provisioner-file": {
        "prefix": "tf-provisioner-file",
        "description": "Define a file provisioner",
        "body": [
            "   # Copies the myapp.conf file to /etc/myapp.conf",
            "   provisioner \"file\" {",
            "       source = \"conf/myapp.conf\"",
            "       destination = \"/etc/myapp.conf\"",
            "   }"
        ]
    },
    "provisioner-local-exec": {
        "prefix": "tf-provisioner-local-exec",
        "description": "Define a local-exec provisioner",
        "body": [
            "   provisioner \"local-exec\" {",
            "       command = \"echo ${aws_instance.web.private_ip} >> private_ips.txt\"",
            "   }"
        ]
    },
    "provisioner-remote-exec": {
        "prefix": "tf-provisioner-remote-exec",
        "description": "Define a remote-exec provisioner",
        "body": [
            "   provisioner \"remote-exec\" {",
            "       inline = [",
            "           \"puppet apply\",",
            "           \"consul join ${aws_instance.web.private_ip}\"",
            "       ]",
            "   }"
        ]
    },
    "provisioner-null_resource": {
        "prefix": "tf-provisioner-null_resource",
        "description": "Define a null_resource provisioner",
        "body": [
            "resource \"null_resource\" \"${cluster}\" {",
            "   # Changes to any instance of the cluster requires re-provisioning",
            "   triggers {",
            "       cluster_instance_ids = \"\\${join(",", aws_instance.cluster.*.id)}\"",
            "   }",
            "}"
        ]
    },
    "template_file": {
        "prefix": "tf-template_file",
        "description": "Define a template_file template from file",
        "body": [
            "data \"template_file\" \"${init}\" {",
            "   template = \"\\${file(\"\\${path.module}/${init}.tpl\")}\"\n",
            "   vars {",
            "       consul_address = \"\\${aws_instance.consul.private_ip}\"",
            "   }",
            "}"
        ]
    },
    "template_file-inline": {
        "prefix": "tf-template_file-inline",
        "description": "Define a template_file template inline",
        "body": [
            "data \"template_file\" \"${init}\" {",
            "   template = \"\\$\\${consul_address}:1234\"",
            "   vars {",
            "       consul_address = \"\\${aws_instance.consul.private_ip}\"",
            "   }",
            "}"
        ]
    },
    "template_cloudinit_config": {
        "prefix": "tf-template_cloudinit_config",
        "description": "Define a template_cloudinit_config template",
        "body": [
            "data \"template_cloudinit_config\" \"${config}\" {",
            "}"
        ]
    },
    "aws_acm_certificate": {
        "prefix": "tf-aws_acm_certificate",
        "description": "Use this data source to get the ARN of a certificate in AWS Certificate Manager (ACM). The process of requesting and verifying a certificate in ACM requires some manual steps, which means that Terraform cannot automate the creation of ACM certificates. But using this data source, you can reference them by domain without having to hard code the ARNs as input.",
        "body": [
            "data \"aws_acm_certificate\" \"${example}\" {",
            "   domain = \"tf.${example}.com\"",
            "   statuses = [\"ISSUED]\"]",
            "}"
        ]
    },
    "aws_alb_listener": {
        "prefix": "tf-aws_alb_listener",
        "description": "Provides information about an Application Load Balancer Listener. This data source can prove useful when a module accepts an ALB Listener as an input variable and needs to know the ALB it is attached to, or other information specific to the listener in question.",
        "body": [
            "variable \"${listener_arn}\" {",
            "   type = \"string\"",
            "}\n",
            "data \"aws_alb_listener\" \"listener\" {",
            "   arn = \"\\${var.${listener_arn}}\"",
            "}"
        ]
    },
    "aws_ami": {
        "prefix": "tf-aws_ami",
        "description": "aws_ami - Use this data source to get the ID of a registered AMI for use in other resources.",
        "body": [
            "data \"aws_ami\" \"${ami-name}\" {",
            "\tmost_recent = true",
            "\texecutable_users = [\"self\"]",
            "\tfilter {",
            "\t\tname = \"owner-alias\"",
            "\t\tvalues = [\"amazon\"]",
            "\t}",
            "\tfilter {",
            "\t\tname = \"name\"",
            "\t\tvalues = [\"amzn-ami-vpc-nat*\"]",
            "\t}",
            "\towners = [\"self\"]",
            "}"
        ]
    },
    "aws_availability_zone": {
        "prefix":"tf-aws_availability_zone",
        "description": "aws_availability_zone provides details about a specific availablity zone (AZ) in the current region. This can be used both to validate an availability zone given in a variable and to split the AZ name into its component parts of an AWS region and an AZ identifier letter. The latter may be useful e.g. for implementing a consistent subnet numbering scheme across several regions by mapping both the region and the subnet letter to network numbers.",
        "body": [
            "variable \"${region_number}\" {",
            "   # Arbitrary mapping of region name to number to use in",
            "   # a VPC's CIDR prefix.",
            "   default = {",
            "       us-east-1      = 1",
            "       us-west-2      = 3",
            "       us-west-1      = 2",
            "       eu-central-1   = 4",
            "       ap-northeast-1 = 5",
            "   }",
            "}\n",
            "variable \"${az_number}\" {",
            "   # Assign a number to each AZ letter used in our configuration",
            "   default = {",
            "       a = 1",
            "       b = 2",
            "       c = 3",
            "       d = 4",
            "       e = 5",
            "       f = 6",
            "   }",
            "}\n",
            "# Retrieve the AZ where we want to create network resources",
            "# This must be in the region selected on the AWS provider.",
            "data \"aws_availability_zone\" \"${example}\" {",
            "   name = \"eu-central-1a\"",
            "}\n",
            "# Create a VPC for the region associated with the AZ",
            "resource \"aws_vpc\" \"${example}\" {",
            "   cidr_block = \"\\${cidrsubnet(\"10.0.0.0/8\", 4, var.${region_number}[data.aws_availability_zone.${example}.region])}\"",
            "}\n",
            "# Create a subnet for the AZ within the regional VPC",
            "resource \"aws_subnet\" \"${example}\" {",
            "   vpc_id     = \"${aws_vpc.${example}.id}\"",
            "   cidr_block = \"$\\{cidrsubnet(aws_vpc.${example}.cidr_block, 4, var.${az_number}[data.aws_availability_zone.name_suffix])}\"",
            "}"
        ]
    },
    "aws_availability_zones": {
        "prefix":"tf-aws_availability_zones",
        "description": "aws_ecs_container_definition - The Availability Zones data source allows access to the list of AWS Availability Zones which can be accessed by an AWS account within the region configured in the provider.",
        "body": [
            "# State can be either: available, information, impaired, or unavailable",
            "data \"aws_availability_zones\" \"available\" {}"
        ]
    },
    "aws_caller_identity": {
        "prefix":"tf-aws_caller_identity",
        "description": "aws_caller_identity - Use this data source to get the access to the effective Account ID in which Terraform is working.",
        "body": [
            "data \"aws_caller_identity\" \"current\" { }\n",
            "output \"account_id\" {",
            "\tvalue = \"\\${data.aws_caller_identity.current.account_id}\"",
            "}"
        ]
    },
    "aws_cloudformation_stack": {
        "prefix":"tf-aws_cloudformation_stack",
        "description": "aws_cloudformation_stack - The CloudFormation Stack data source allows access to stack outputs and other useful data including the template body..",
        "body": [
            "data \"aws_cloudformation_stack\" \"network\" {",
            "   name = \"${my-network-stack}\"",
            "}\n",
            "resource \"aws_instance\" \"${web}\" {",
            "   ami = \"${ami-abb07bcb}\"",
            "   instance_type = \"${t1.micro}\"",
            "   subnet_id = \"\\${data.aws_cloudformation_stack.network.outputs[\"SubnetId\"]}\"",
            "   tags {",
            "       Name = \"${HelloWorld}\"",
            "   }",
            "}"
        ]
    },
    "aws_ebs_volume": {
        "prefix":"tf-aws_ebs_volume",
        "description": "Use this data source to get information about an EBS volume for use in other resources.",
        "body": [
            "data \"aws_ebs_volume\" \"${ebs_volume}\" {",
            "    most_recent = true",
            "    filter {",
            "        name = \"volume-type\"",
            "        values = [\"gp2\"]",
            "    }",
            "    filter {",
            "        name = \"tag:${Name}\"",
            "        values = [\"${Example}\"]",
            "    }",
            "}"
        ]
    },
    "aws_ecs_container_definition": {
        "prefix":"tf-aws_ecs_container_definition",
        "description": "aws_ecs_container_definition - The ECS container definition data source allows access to details of a specific container within an AWS ECS service.",
        "body": [
            "data \"aws_ecs_container_definition\" \"ecs-${name}\" {",
            "   task_definition = \"${aws_ecs_task_definition.${name}.id}\"",
            "   container_name = \"${name}\"",
            "}"
        ]
    },
    "aws_elb_service_account": {
        "prefix":"tf-aws_elb_service_account",
        "description": "aws_elb_service_account - Use this data source to get the Account ID of the AWS Elastic Load Balancing Service Account in a given region for the purpose of whitelisting in S3 bucket policy.",
        "body": [
            "data \"aws_elb_service_account\" \"${main}\" { }\n",
            "# Example\n",
            "resource \"aws_s3_bucket\" \"elb_logs\" {",
            "   bucket = \"${my-elb-tf-test-bucket}\"",
            "   acl = \"private\"",
            "   policy = <<POLICY",
            "{",
            "   \"Id\": \"Policy\",",
            "   \"Version\": \"2012-10-17\",",
            "   \"Statement\": [",
            "   {",
            "       \"Action\": [",
            "           \"s3:PutObject\"",
            "       ],",
            "       \"Effect\": \"Allow\",",
            "       \"Resource\": \"arn:aws:s3:::my-elb-tf-test-bucket/AWSLogs/*\",",
            "       \"Principal\": {",
            "           \"AWS\": [",
            "               \"\\${data.aws_elb_service_account.${main}.id}\"",
            "           ]",
            "       }",
            "   }",
            "   ]",
            "}",
            "POLICY",
            "}\n",
            "resource \"aws_elb\" \"${bar}\" {",
            "   name = \"${my-foobar-terraform-elb}\"",
            "   availability_zones = [\"${us-west-2a}\"]\n",
            "   access_logs {",
            "       bucket = \"\\${aws_s3_bucket.elb_logs.bucket}\"",
            "       interval = 5",
            "   }\n",

            "   listener {",
            "       instance_port = 8000",
            "       instance_protocol = \"http\"",
            "       lb_port = 80",
            "       lb_protocol = \"http\"",
            "   }",
            "}"
        ]
    },
    "aws_iam_policy_document": {
        "prefix":"tf-aws_iam_policy_document",
        "description": "aws_iam_policy_document - Generates an IAM policy document in JSON format.",
        "body": [
            "data \"aws_iam_policy_document\" \"${example}\" {",
            "   statement {",
            "       sid = \"1\"",
            "       actions = [",
            "           \"s3:ListAllMyBuckets\",",
            "           \"s3:GetBucketLocation\",",
            "       ]",
            "       resources = [",
            "           \"arn:aws:s3:::*\",",
            "       ]",
            "   }\n",
            "   statement {",
            "       actions = [",
            "           \"s3:ListBucket\",",
            "       ]",
            "       resources = [",
            "           \"arn:aws:s3:::\\${var.s3_bucket_name}\",",
            "       ]",
            "       condition {",
            "           test = \"StringLike\"",
            "           variable = \"s3:prefix\"",
            "           values = [",
            "               \"\",",
            "               \"home/\",",
            "               \"home/&{aws:username}/\",",
            "           ]",
            "       }",
            "   }\n",
            "   statement {",
            "       actions = [",
            "           \"s3:*\",",
            "       ]",
            "       resources = [",
            "           \"arn:aws:s3:::\\${var.s3_bucket_name}/home/&{aws:username}\",",
            "           \"arn:aws:s3:::\\${var.s3_bucket_name}/home/&{aws:username}/*\",",
            "       ]",
            "   }",
            "}\n",

            "resource \"aws_iam_policy\" \"${example}\" {",
            "   name = \"example_policy\"",
            "   path = \"/\"",
            "   policy = \"\\${data.aws_iam_policy_document.${example}.json}\"",
            "}"
        ]
    },
    "aws_ip_ranges": {
        "prefix":"tf-aws_ip_ranges",
        "description": "Use this data source to get the IP ranges of various AWS products and services.",
        "body": [
            "data \"aws_ip_ranges\" \"${european_ec2}\" {",
            "   regions = [ \"eu-west-1\", \"eu-central-1\" ]",
            "   services = [ \"ec2\" ]",
            "}\n",
            "resource \"aws_security_group\" \"from_europe\" {",
            "   name = \"from_europe\"\n",
            "   ingress {",
            "       from_port = \"443\"",
            "       to_port = \"443\"",
            "       protocol = \"tcp\"",
            "       cidr_blocks = [ \"\\${data.aws_ip_ranges.${european_ec2}.cidr_blocks}\" ]",
            "   }\n",
            "   tags {",
            "       CreateDate = \"\\${data.aws_ip_ranges.${european_ec2}.create_date}\"",
            "       SyncToken = \"\\${data.aws_ip_ranges.${european_ec2}.sync_token}\"",
            "   }\n",
            "}"
        ]
    },
    "aws_prefix_list": {
        "prefix":"tf-aws_prefix_list",
        "description": "aws_prefix_list provides details about a specific prefix list (PL) in the current region. This can be used both to validate a prefix list given in a variable and to obtain the CIDR blocks (IP address ranges) for the associated AWS service. The latter may be useful e.g. for adding network ACL rules.",
        "body": [
            "resource \"aws_vpc_endpoint\" \"${private_s3}\" {",
            "    vpc_id = \"\\${aws_vpc.foo.id}\"",
            "    service_name = \"com.amazonaws.us-west-2.s3\"",
            "}\n",
            "data \"aws_prefix_list\" \"${private_s3}\" {",
            "   prefix_list_id = \"\\${aws_vpc_endpoint.${private_s3}.prefix_list_id}\"",
            "}\n",
            "resource \"aws_network_acl\" \"${bar}\" {",
            "    vpc_id = \"\\${aws_vpc.foo.id}\"",
            "}\n",
            "resource \"aws_network_acl_rule\" \"${private_s3}\" {",
            "    network_acl_id = \"\\${aws_network_acl.${bar}.id}\"",
            "    rule_number = 200",
            "    egress = false",
            "    protocol = \"tcp\"",
            "    rule_action = \"allow\"",
            "    cidr_block = \"\\${data.aws_prefix_list.${private_s3}.cidr_blocks[0]}\"",
            "    from_port = 443",
            "    to_port = 443",
            "}"
        ]
    },
    "aws_redshift_service_account": {
        "prefix":"tf-aws_redshift_service_account",
        "description": "Use this data source to get the Service Account ID of the AWS Redshift Account in a given region for the purpose of allowing Redshift to store audit data in S3.",
        "body": [
            "data \"aws_redshift_service_account\" \"${main}\" { }\n",
            "resource \"aws_s3_bucket\" \"bucket\" {",
            "   bucket = \"tf-redshift-logging-test-bucket\"",
            "   force_destroy = true",
            "   policy = <<EOF",
            "{",
            "   \"Version\": \"2008-10-17\",",
            "   \"Statement\": [",
            "       {",
            "           \"Sid\": \"Put bucket policy needed for audit logging\",",
            "           \"Effect\": \"Allow\",",
            "           \"Principal\": {",
            "               \"AWS\": \"arn:aws:iam:\\${data.aws_redshift_service_account.${main}.id}:user/logs\"",
            "           },",
            "           \"Action\": \"s3:PutObject\",",
            "           \"Resource\": \"arn:aws:s3:::tf-redshift-logging-test-bucket\/*\"",
            "       },",
            "       {",
            "           \"Sid\": \"Get bucket policy needed for audit logging \",",
            "           \"Effect\": \"Allow\",",
            "           \"Principal\": {",
            "               \"AWS\": \"arn:aws:iam:\\${data.aws_redshift_service_account.${main}.id}:user/logs\"",
            "           },",
            "           \"Action\": \"s3:GetBucketAcl\",",
            "           \"Resource\": \"arn:aws:s3:::tf-redshift-logging-test-bucket\"",
            "       }",
            "  ]",
            "}",
            "EOF",
            "}"
        ]
    },
    "aws_region": {
        "prefix":"tf-aws_region",
        "description": "aws_region provides details about a specific AWS region. As well as validating a given region name (and optionally obtaining its endpoint) this resource can be used to discover the name of the region configured within the provider. The latter can be useful in a child module which is inheriting an AWS provider configuration from its parent module.",
        "body": [
            "data \"aws_region\" \"current\" {",
            "    current = true",
            "}"
        ]
    },
    "aws_s3_bucket_object": {
        "prefix":"tf-aws_s3_bucket_object",
        "description": "The S3 object data source allows access to the metadata and optionally (see below) content of an object stored inside S3 bucket.",
        "body": [
            "data \"aws_s3_bucket_object\" \"${lambda}\" {",
            "    bucket = \"my-lambda-functions\"",
            "    key = \"hello-world.zip\"",
            "}\n",
            "resource \"aws_iam_role\" \"iam_for_lambda\" {",
            "    name = \"iam_for_lambda\"",
            "    assume_role_policy = <<EOF",
            "{",
            "    \"Version\": \"2012-10-17\",",
            "    \"Statement\": [",
            "        {",
            "            \"Action\": \"sts:AssumeRole\",",
            "            \"Principal\": {",
            "            \"Service\": \"lambda.amazonaws.com\"",
            "        },",
            "            \"Effect\": \"Allow\",",
            "            \"Sid\": \"\"",
            "        }",
            "    ]",
            "}",
            "EOF",
            "}\n",
            "resource \"aws_lambda_function\" \"test_lambda\" {",
            "    s3_bucket = \"\\${data.aws_s3_bucket_object.${lambda}.bucket}\"",
            "    s3_key = \"\\${data.aws_s3_bucket_object.${lambda}.key}\"",
            "    s3_object_version = \"\\${data.aws_s3_bucket_object.${lambda}.version_id}\"",
            "    function_name = \"lambda_function_name\"",
            "    role = \"\\${aws_iam_role.iam_for_lambda.arn}\"",
            "    handler = \"exports.test\"",
            "}"
        ]
    },
    "aws_security_group": {
        "prefix":"tf-aws_security_group",
        "description": "aws_security_group provides details about a specific Security Group. This resource can prove useful when a module accepts a Security Group id as an input variable and needs to, for example, determine the id of the VPC that the security group belongs to.",
        "body": [
            "variable \"security_group_id\" {}\n",
            "data \"aws_security_group\" \"${selected}\" {",
            "    id = \"\\${var.security_group}\"",
            "}\n",
            "resource \"aws_subnet\" \"subnet\" {",
            "    vpc_id = \"\\${data.aws_security_group.${selected}.vpc_id}\"",
            "    cidr_block = \"10.0.1.0/24\"",
            "}"
        ]
    },
    "aws_subnet": {
        "prefix":"tf-aws_subnet",
        "description": "aws_subnet provides details about a specific VPC subnet. This resource can prove useful when a module accepts a subnet id as an input variable and needs to, for example, determine the id of the VPC that the subnet belongs to.",
        "body": [
            "variable \"subnet_id\" {}\n",
            "data \"aws_subnet\" \"${selected}\" {",
            "    id = \"\\${var.subnet_id}\"",
            "}\n",
            "resource \"aws_security_group\" \"subnet\" {",
            "    vpc_id = \"\\${data.aws_subnet.${selected}.vpc_id}\"\n",
            "    ingress {",
            "        cidr_blocks = [\"\\${data.aws_subnet.${selected}.cidr_block}\"]",
            "        from_port   = 80",
            "        to_port     = 80",
            "        protocol    = \"tcp\"",
            "    }",
            "}"
        ]
    },
    "aws_vpc": {
        "prefix":"tf-aws_vpc",
        "description": "aws_vpc provides details about a specific VPC. This resource can prove useful when a module accepts a vpc id as an input variable and needs to, for example, determine the CIDR block of that VPC.",
        "body": [
            "variable \"vpc_id\" {}\n",
            "data \"aws_vpc\" \"${selected}\" {",
            "   id = \"\\${var.vpc_id}\"",
            "}\n",
            "resource \"aws_subnet\" \"example\" {",
            "    vpc_id            = \"\\${data.aws_vpc.${selected}.id}\"",
            "    availability_zone = \"us-west-2a\"",
            "    cidr_block        = \"\\${cidrsubnet(data.aws_vpc.${selected}.cidr_block, 4, 1)}\"",
            "}"
        ]
    },
    "aws_api_gateway_account": {
        "prefix":"tf-aws_api_gateway_account",
        "description": "Provides a settings of an API Gateway Account. Settings is applied region-wide per provider block.",
        "body": [
            "resource \"aws_api_gateway_account\" \"${demo}\" {\n",
            "}"
        ]
    },
    "aws_api_gateway_api_key": {
        "prefix":"tf-aws_api_gateway_api_key",
        "description": "Provides an API Gateway API Key.",
        "body": [
            "resource \"aws_api_gateway_api_key\" \"${MyDemoApiKey}\" {",
            "   name = \"${MyDemoApiKey}\"\n",
            "   stage_key {",
            "       rest_api_id = \"\"",
            "       stage_name = \"\"",
            "   }",
            "}"
        ]
    },
    "aws_api_gateway_authorizer": {
        "prefix":"tf-aws_api_gateway_authorizer",
        "description": "Provides an API Gateway Authorizer.",
        "body": [
            "resource \"aws_api_gateway_authorizer\" \"${demo}\" {",
            "   name = \"${demo}\"",
            "   rest_api_id = \"\"",
            "   authorizer_uri = \"\"",
            "   authorizer_credentials = \"\"",
            "}"
        ]
    },
    "aws_api_gateway_base_path_mapping": {
        "prefix":"tf-aws_api_gateway_base_path_mapping",
        "description": "Connects a custom domain name registered via aws_api_gateway_domain_name with a deployed API so that its methods can be called via the custom domain name.",
        "body": [
            "resource \"aws_api_gateway_base_path_mapping\" \"${test}\" {",
            "   api_id      = \"\"",
            "   stage_name  = \"\"",
            "   domain_name = \"\"",
            "}"
        ]
    },
    "aws_api_gateway_client_certificate": {
        "prefix":"tf-aws_api_gateway_client_certificate",
        "description": "Provides an API Gateway Client Certificate.",
        "body": [
            "resource \"aws_api_gateway_client_certificate\" \"${demo}\" {",
            "   description = \"My client certificate\"",
            "}"
        ]
    },
    "api_gateway_deployment": {
        "prefix":"tf-api_gateway_deployment",
        "description": "Provides an API Gateway Deployment.",
        "body": [
            "resource \"aws_api_gateway_deployment\" \"${MyDemoDeployment}\" {",
            "   depends_on = [\"\"]\n",
            "   rest_api_id = \"\"",
            "   stage_name = \"test\"\n",
            "   variables = {",
            "       \"answer\" = \"42\"",
            "   }",
            "}"
        ]
    },
    "aws_api_gateway_domain_name": {
        "prefix":"tf-aws_api_gateway_domain_name",
        "description": "Registers a custom domain name for use with AWS API Gateway.",
        "body": [
            "resource \"aws_api_gateway_domain_name\" \"${example}\" {",
            "   domain_name = \"api.${example}.com\"\n",
            "   certificate_name        = \"${example}-api\"",
            "   certificate_body        = \"${file(\"\\${path.module}/${example}.com/${example}.crt\")}\"",
            "   certificate_chain       = \"${file(\"\\${path.module}/${example}.com/ca.crt\")}\"",
            "   certificate_private_key = \"${file(\"\\${path.module}/${example}.com/${example}.key\")}\"",
            "}"
        ]
    },
    "aws_api_gateway_integration": {
        "prefix":"tf-aws_api_gateway_integration",
        "description": "Provides an HTTP Method Integration for an API Gateway Resource.",
        "body": [
            "resource \"aws_api_gateway_integration\" \"${MyDemoIntegration}\" {",
            "   rest_api_id = \"\"",
            "   resource_id = \"\"",
            "   http_method = \"\"",
            "   type = \"MOCK\"",
            "}"
        ]
    },
    "aws_api_gateway_integration_response": {
        "prefix":"tf-aws_api_gateway_integration_response",
        "description": "Provides an HTTP Method Integration Response for an API Gateway Resource.",
        "body": [
            "resource \"aws_api_gateway_integration_response\" \"${MyDemoIntegrationResponse}\" {",
            "   rest_api_id = \"\\${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
            "   resource_id = \"\\${aws_api_gateway_resource.MyDemoResource.id}\"",
            "   http_method = \"\\${aws_api_gateway_method.MyDemoMethod.http_method}\"",
            "   status_code = \"\\${aws_api_gateway_method_response.200.status_code}\"",
            "}"
        ]
    },
    "aws_api_gateway_method": {
        "prefix":"tf-aws_api_gateway_method",
        "description": "Provides a HTTP Method for an API Gateway Resource.",
        "body": [
            "resource \"aws_api_gateway_method\" \"${MyDemoMethod}\" {",
            "   rest_api_id = \"\\${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
            "   resource_id = \"\\${aws_api_gateway_resource.MyDemoResource.id}\"",
            "   http_method = \"GET\"",
            "   authorization = \"NONE\"",
            "}"
        ]
    },
    "aws_api_gateway_method_response": {
        "prefix":"tf-aws_api_gateway_method_response",
        "description": "Provides an HTTP Method Response for an API Gateway Resource.",
        "body": [
            "resource \"aws_api_gateway_method_response\" \"${200}\" {",
            "   rest_api_id = \"\\${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
            "   resource_id = \"\\${aws_api_gateway_resource.MyDemoResource.id}\"",
            "   http_method = \"\\${aws_api_gateway_method.MyDemoMethod.http_method}\"",
            "   status_code = \"\\${200}\"",
            "}"
        ]
    },
    "aws_api_gateway_model": {
        "prefix":"tf-aws_api_gateway_model",
        "description": "Provides a Model for a API Gateway.",
        "body": [
            "resource \"aws_api_gateway_model|\" \"${MyDemoModel}\" {",
            "   rest_api_id = \"\\${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
            "   name = \"user\"",
            "   description = \"a JSON schema\"",
            "   content_type = \"application/json\"",
            "   schema = <<EOF",
            "{",
            "   \"type\": \"object\"",
            "}",
            "EOF",
            "}"
        ]
    },
    "aws_api_gateway_resource": {
        "prefix":"tf-aws_api_gateway_resource",
        "description": "Provides an API Gateway Resource.",
        "body": [
            "resource \"aws_api_gateway_resource\" \"${MyDemoResource}\" {",
            "   rest_api_id = \"\\${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
            "   parent_id = \"\\${aws_api_gateway_rest_api.MyDemoAPI.root_resource_id}\"",
            "   path_part = \"\\${mydemoresource}\"",
            "}"
        ]
    },
    "aws_api_gateway_rest_api": {
        "prefix":"tf-aws_api_gateway_rest_api",
        "description": "",
        "body": [
            "resource \"aws_api_gateway_rest_api\" \"${MyDemoAPI}\" {",
            "   name = \"${MyDemoAPI}\"",
            "   description = \"This is my API for demonstration purposes\"",
            "}"
        ]
    },
    "aws_appautoscaling_policy": {
        "prefix":"tf-aws_appautoscaling_policy",
        "description": "Defines aws_appautoscaling_policy",
        "body": [
            "resource \"aws_appautoscaling_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_appautoscaling_target": {
        "prefix":"tf-aws_appautoscaling_target",
        "description": "Defines aws_appautoscaling_target",
        "body": [
            "resource \"aws_appautoscaling_target\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_cloudformation_stack": {
        "prefix":"tf-aws_cloudformation_stack",
        "description": "Defines aws_cloudformation_stack",
        "body": [
            "resource \"aws_cloudformation_stack\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_cloudfront_distribution": {
        "prefix":"tf-aws_cloudfront_distribution",
        "description": "Defines aws_cloudfront_distribution",
        "body": [
            "resource \"aws_cloudfront_distribution\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_cloudfront_origin_access_identity": {
        "prefix":"tf-aws_cloudfront_origin_access_identity",
        "description": "Defines aws_cloudfront_origin_access_identity",
        "body": [
            "resource \"aws_cloudfront_origin_access_identity\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_cloudtrail": {
        "prefix":"tf-aws_cloudtrail",
        "description": "Defines aws_cloudtrail",
        "body": [
            "resource \"aws_cloudtrail\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_cloudwatch_event_rule": {
        "prefix":"tf-aws_cloudwatch_event_rule",
        "description": "Defines aws_cloudwatch_event_rule",
        "body": [
            "resource \"aws_cloudwatch_event_rule\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_cloudwatch_event_target": {
        "prefix":"tf-aws_cloudwatch_event_target",
        "description": "Defines aws_cloudwatch_event_target",
        "body": [
            "resource \"aws_cloudwatch_event_target\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_cloudwatch_log_group": {
        "prefix":"tf-aws_cloudwatch_log_group",
        "description": "Defines aws_cloudwatch_log_group",
        "body": [
            "resource \"aws_cloudwatch_log_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_cloudwatch_log_metric_filter": {
        "prefix":"tf-aws_cloudwatch_log_metric_filter",
        "description": "Defines aws_cloudwatch_log_metric_filter",
        "body": [
            "resource \"aws_cloudwatch_log_metric_filter\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_cloudwatch_log_stream": {
        "prefix":"tf-aws_cloudwatch_log_stream",
        "description": "Defines aws_cloudwatch_log_stream",
        "body": [
            "resource \"aws_cloudwatch_log_stream\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_cloudwatch_log_subscription_filter": {
        "prefix":"tf-aws_cloudwatch_log_subscription_filter",
        "description": "Defines aws_cloudwatch_log_subscription_filter",
        "body": [
            "resource \"aws_cloudwatch_log_subscription_filter\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_cloudwatch_metric_alarm": {
        "prefix":"tf-aws_cloudwatch_metric_alarm",
        "description": "Defines aws_cloudwatch_metric_alarm",
        "body": [
            "resource \"aws_cloudwatch_metric_alarm\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_codecommit_repository": {
        "prefix":"tf-aws_codecommit_repository",
        "description": "Defines aws_codecommit_repository",
        "body": [
            "resource \"aws_codecommit_repository\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_codecommit_trigger": {
        "prefix":"tf-aws_codecommit_trigger",
        "description": "Defines aws_codecommit_trigger",
        "body": [
            "resource \"aws_codecommit_trigger\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_codedeploy_app": {
        "prefix":"tf-aws_codedeploy_app",
        "description": "Defines aws_codedeploy_app",
        "body": [
            "resource \"aws_codedeploy_app\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_codedeploy_deployment_group": {
        "prefix":"tf-aws_codedeploy_deployment_group",
        "description": "Defines aws_codedeploy_deployment_group",
        "body": [
            "resource \"aws_codedeploy_deployment_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_directory_service_directory": {
        "prefix":"tf-aws_directory_service_directory",
        "description": "Defines aws_directory_service_directory",
        "body": [
            "resource \"aws_directory_service_directory\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_dynamodb_table": {
        "prefix":"tf-aws_dynamodb_table",
        "description": "Defines aws_dynamodb_table",
        "body": [
            "resource \"aws_dynamodb_table\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_alb": {
        "prefix":"tf-aws_alb",
        "description": "Defines aws_alb",
        "body": [
            "resource \"aws_alb\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_alb_listener_rule": {
        "prefix":"tf-aws_alb_listener_rule",
        "description": "Defines aws_alb_listener_rule",
        "body": [
            "resource \"aws_alb_listener_rule\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_alb_target_group": {
        "prefix":"tf-aws_alb_target_group",
        "description": "Defines aws_alb_target_group",
        "body": [
            "resource \"aws_alb_target_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_alb_target_group_attachment": {
        "prefix":"tf-aws_alb_target_group_attachment",
        "description": "Defines aws_alb_target_group_attachment",
        "body": [
            "resource \"aws_alb_target_group_attachment\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_ami_copy": {
        "prefix":"tf-aws_ami_copy",
        "description": "Defines aws_ami_copy",
        "body": [
            "resource \"aws_ami_copy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_ami_from_instance": {
        "prefix":"tf-aws_ami_from_instance",
        "description": "Defines aws_ami_from_instance",
        "body": [
            "resource \"aws_ami_from_instance\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_ami_launch_permission": {
        "prefix":"tf-aws_ami_launch_permission",
        "description": "Defines aws_ami_launch_permission",
        "body": [
            "resource \"aws_ami_launch_permission\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_app_cookie_stickiness_policy": {
        "prefix":"tf-aws_app_cookie_stickiness_policy",
        "description": "Defines aws_app_cookie_stickiness_policy",
        "body": [
            "resource \"aws_app_cookie_stickiness_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_autoscaling_group": {
        "prefix":"tf-aws_autoscaling_group",
        "description": "Defines aws_autoscaling_group",
        "body": [
            "resource \"aws_autoscaling_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_autoscaling_attachment": {
        "prefix":"tf-aws_autoscaling_attachment",
        "description": "Defines aws_autoscaling_attachment",
        "body": [
            "resource \"aws_autoscaling_attachment\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_autoscaling_lifecycle_hook": {
        "prefix":"tf-aws_autoscaling_lifecycle_hook",
        "description": "Defines aws_autoscaling_lifecycle_hook",
        "body": [
            "resource \"aws_autoscaling_lifecycle_hook\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_autoscaling_notification": {
        "prefix":"tf-aws_autoscaling_notification",
        "description": "Defines aws_autoscaling_notification",
        "body": [
            "resource \"aws_autoscaling_notification\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_autoscaling_policy": {
        "prefix":"tf-aws_autoscaling_policy",
        "description": "Defines aws_autoscaling_policy",
        "body": [
            "resource \"aws_autoscaling_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_autoscaling_schedule": {
        "prefix":"tf-aws_autoscaling_schedule",
        "description": "Defines aws_autoscaling_schedule",
        "body": [
            "resource \"aws_autoscaling_schedule\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_eip": {
        "prefix":"tf-aws_eip",
        "description": "Defines aws_eip",
        "body": [
            "resource \"aws_eip\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_eip_association": {
        "prefix":"tf-aws_eip_association",
        "description": "Defines aws_eip_association",
        "body": [
            "resource \"aws_eip_association\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_elb": {
        "prefix":"tf-aws_elb",
        "description": "Defines aws_elb",
        "body": [
            "resource \"aws_elb\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_elb_attachment": {
        "prefix":"tf-aws_elb_attachment",
        "description": "Defines aws_elb_attachment",
        "body": [
            "resource \"aws_elb_attachment\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_instance": {
        "prefix":"tf-aws_instance",
        "description": "Defines aws_instance",
        "body": [
            "resource \"aws_instance\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_key_pair": {
        "prefix":"tf-aws_key_pair",
        "description": "Defines aws_key_pair",
        "body": [
            "resource \"aws_key_pair\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_launch_configuration": {
        "prefix":"tf-aws_launch_configuration",
        "description": "Defines aws_launch_configuration",
        "body": [
            "resource \"aws_launch_configuration\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_lb_cookie_stickiness_policy": {
        "prefix":"tf-aws_lb_cookie_stickiness_policy",
        "description": "Defines aws_lb_cookie_stickiness_policy",
        "body": [
            "resource \"aws_lb_cookie_stickiness_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_lb_ssl_negotiation_policy": {
        "prefix":"tf-aws_lb_ssl_negotiation_policy",
        "description": "Defines aws_lb_ssl_negotiation_policy",
        "body": [
            "resource \"aws_lb_ssl_negotiation_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_load_balancer_backend_server_policy": {
        "prefix":"tf-aws_load_balancer_backend_server_policy",
        "description": "Defines aws_load_balancer_backend_server_policy",
        "body": [
            "resource \"aws_load_balancer_backend_server_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_load_balancer_listener_policy": {
        "prefix":"tf-aws_load_balancer_listener_policy",
        "description": "Defines aws_load_balancer_listener_policy",
        "body": [
            "resource \"aws_load_balancer_listener_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_load_balancer_policy": {
        "prefix":"tf-aws_load_balancer_policy",
        "description": "Defines aws_load_balancer_policy",
        "body": [
            "resource \"aws_load_balancer_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_placement_group": {
        "prefix":"tf-aws_placement_group",
        "description": "Defines aws_placement_group",
        "body": [
            "resource \"aws_placement_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_proxy_protocol_policy": {
        "prefix":"tf-aws_proxy_protocol_policy",
        "description": "Defines aws_proxy_protocol_policy",
        "body": [
            "resource \"aws_proxy_protocol_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_spot_datafeed_subscription": {
        "prefix":"tf-aws_spot_datafeed_subscription",
        "description": "Defines aws_spot_datafeed_subscription",
        "body": [
            "resource \"aws_spot_datafeed_subscription\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_spot_fleet_request": {
        "prefix":"tf-aws_spot_fleet_request",
        "description": "Defines aws_spot_fleet_request",
        "body": [
            "resource \"aws_spot_fleet_request\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_spot_instance_request": {
        "prefix":"tf-aws_spot_instance_request",
        "description": "Defines aws_spot_instance_request",
        "body": [
            "resource \"aws_spot_instance_request\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_volume_attachment": {
        "prefix":"tf-aws_volume_attachment",
        "description": "Defines aws_volume_attachment",
        "body": [
            "resource \"aws_volume_attachment\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_ecr_repository": {
        "prefix":"tf-aws_ecr_repository",
        "description": "Defines aws_ecr_repository",
        "body": [
            "resource \"aws_ecr_repository\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_ecr_repository_policy": {
        "prefix":"tf-aws_ecr_repository_policy",
        "description": "Defines aws_ecr_repository_policy",
        "body": [
            "resource \"aws_ecr_repository_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_ecs_cluster": {
        "prefix":"tf-aws_ecs_cluster",
        "description": "Defines aws_ecs_cluster",
        "body": [
            "resource \"aws_ecs_cluster\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_ecs_service": {
        "prefix":"tf-aws_ecs_service",
        "description": "Defines aws_ecs_service",
        "body": [
            "resource \"aws_ecs_service\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_ecs_task_definition": {
        "prefix":"tf-aws_ecs_task_definition",
        "description": "Defines aws_ecs_task_definition",
        "body": [
            "resource \"aws_ecs_task_definition\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_efs_file_system": {
        "prefix":"tf-aws_efs_file_system",
        "description": "Defines aws_efs_file_system",
        "body": [
            "resource \"aws_efs_file_system\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_efs_mount_target": {
        "prefix":"tf-aws_efs_mount_target",
        "description": "Defines aws_efs_mount_target",
        "body": [
            "resource \"aws_efs_mount_target\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_elasticache_cluster": {
        "prefix":"tf-aws_elasticache_cluster",
        "description": "Defines aws_elasticache_cluster",
        "body": [
            "resource \"aws_elasticache_cluster\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_elasticache_parameter_group": {
        "prefix":"tf-aws_elasticache_parameter_group",
        "description": "Defines aws_elasticache_parameter_group",
        "body": [
            "resource \"aws_elasticache_parameter_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_elasticache_replication_group": {
        "prefix":"tf-aws_elasticache_replication_group",
        "description": "Defines aws_elasticache_replication_group",
        "body": [
            "resource \"aws_elasticache_replication_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_elasticache_security_group": {
        "prefix":"tf-aws_elasticache_security_group",
        "description": "Defines aws_elasticache_security_group",
        "body": [
            "resource \"aws_elasticache_security_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_elasticache_subnet_group": {
        "prefix":"tf-aws_elasticache_subnet_group",
        "description": "Defines aws_elasticache_subnet_group",
        "body": [
            "resource \"aws_elasticache_subnet_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_elastic_beanstalk_application": {
        "prefix":"tf-aws_elastic_beanstalk_application",
        "description": "Defines aws_elastic_beanstalk_application",
        "body": [
            "resource \"aws_elastic_beanstalk_application\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_elastic_beanstalk_configuration_template": {
        "prefix":"tf-aws_elastic_beanstalk_configuration_template",
        "description": "Defines aws_elastic_beanstalk_configuration_template",
        "body": [
            "resource \"aws_elastic_beanstalk_configuration_template\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_elastic_beanstalk_environment": {
        "prefix":"tf-aws_elastic_beanstalk_environment",
        "description": "Defines aws_elastic_beanstalk_environment",
        "body": [
            "resource \"aws_elastic_beanstalk_environment\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_emr_cluster": {
        "prefix":"tf-aws_emr_cluster",
        "description": "Defines aws_emr_cluster",
        "body": [
            "resource \"aws_emr_cluster\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_emr_instance_group": {
        "prefix":"tf-aws_emr_instance_group",
        "description": "Defines aws_emr_instance_group",
        "body": [
            "resource \"aws_emr_instance_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_elasticsearch_domain": {
        "prefix":"tf-aws_elasticsearch_domain",
        "description": "Defines aws_elasticsearch_domain",
        "body": [
            "resource \"aws_elasticsearch_domain\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_elastictranscoder_pipeline": {
        "prefix":"tf-aws_elastictranscoder_pipeline",
        "description": "Defines aws_elastictranscoder_pipeline",
        "body": [
            "resource \"aws_elastictranscoder_pipeline\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_elastictranscoder_preset": {
        "prefix":"tf-aws_elastictranscoder_preset",
        "description": "Defines aws_elastictranscoder_preset",
        "body": [
            "resource \"aws_elastictranscoder_preset\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_glacier_vault": {
        "prefix":"tf-aws_glacier_vault",
        "description": "Defines aws_glacier_vault",
        "body": [
            "resource \"aws_glacier_vault\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_access_key": {
        "prefix":"tf-aws_iam_access_key",
        "description": "Defines aws_iam_access_key",
        "body": [
            "resource \"aws_iam_access_key\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_account_password_policy": {
        "prefix":"tf-aws_iam_account_password_policy",
        "description": "Defines aws_iam_account_password_policy",
        "body": [
            "resource \"aws_iam_account_password_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_group": {
        "prefix":"tf-aws_iam_group",
        "description": "Defines aws_iam_group",
        "body": [
            "resource \"aws_iam_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_group_membership": {
        "prefix":"tf-aws_iam_group_membership",
        "description": "Defines aws_iam_group_membership",
        "body": [
            "resource \"aws_iam_group_membership\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_group_policy": {
        "prefix":"tf-aws_iam_group_policy",
        "description": "Defines aws_iam_group_policy",
        "body": [
            "resource \"aws_iam_group_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_group_policy_attachment": {
        "prefix":"tf-aws_iam_group_policy_attachment",
        "description": "Defines aws_iam_group_policy_attachment",
        "body": [
            "resource \"aws_iam_group_policy_attachment\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_instance_profile": {
        "prefix":"tf-aws_iam_instance_profile",
        "description": "Defines aws_iam_instance_profile",
        "body": [
            "resource \"aws_iam_instance_profile\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_policy": {
        "prefix":"tf-aws_iam_policy",
        "description": "Defines aws_iam_policy",
        "body": [
            "resource \"aws_iam_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_policy_attachment": {
        "prefix":"tf-aws_iam_policy_attachment",
        "description": "Defines aws_iam_policy_attachment",
        "body": [
            "resource \"aws_iam_policy_attachment\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_role": {
        "prefix":"tf-aws_iam_role",
        "description": "Defines aws_iam_role",
        "body": [
            "resource \"aws_iam_role\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_role_policy": {
        "prefix":"tf-aws_iam_role_policy",
        "description": "Defines aws_iam_role_policy",
        "body": [
            "resource \"aws_iam_role_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_role_policy_attachment": {
        "prefix":"tf-aws_iam_role_policy_attachment",
        "description": "Defines aws_iam_role_policy_attachment",
        "body": [
            "resource \"aws_iam_role_policy_attachment\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_saml_provider": {
        "prefix":"tf-aws_iam_saml_provider",
        "description": "Defines aws_iam_saml_provider",
        "body": [
            "resource \"aws_iam_saml_provider\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_server_certificate": {
        "prefix":"tf-aws_iam_server_certificate",
        "description": "Defines aws_iam_server_certificate",
        "body": [
            "resource \"aws_iam_server_certificate\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_user": {
        "prefix":"tf-aws_iam_user",
        "description": "Defines aws_iam_user",
        "body": [
            "resource \"aws_iam_user\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_user_login_profile": {
        "prefix":"tf-aws_iam_user_login_profile",
        "description": "Defines aws_iam_user_login_profile",
        "body": [
            "resource \"aws_iam_user_login_profile\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_user_policy": {
        "prefix":"tf-aws_iam_user_policy",
        "description": "Defines aws_iam_user_policy",
        "body": [
            "resource \"aws_iam_user_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_user_policy_attachment": {
        "prefix":"tf-aws_iam_user_policy_attachment",
        "description": "Defines aws_iam_user_policy_attachment",
        "body": [
            "resource \"aws_iam_user_policy_attachment\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_iam_user_ssh_key": {
        "prefix":"tf-aws_iam_user_ssh_key",
        "description": "Defines aws_iam_user_ssh_key",
        "body": [
            "resource \"aws_iam_user_ssh_key\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_kinesis_stream": {
        "prefix":"tf-aws_kinesis_stream",
        "description": "Defines aws_kinesis_stream",
        "body": [
            "resource \"aws_kinesis_stream\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_kinesis_firehose_delivery_stream": {
        "prefix":"tf-aws_kinesis_firehose_delivery_stream",
        "description": "Defines aws_kinesis_firehose_delivery_stream",
        "body": [
            "resource \"aws_kinesis_firehose_delivery_stream\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_kms_alias": {
        "prefix":"tf-aws_kms_alias",
        "description": "Defines aws_kms_alias",
        "body": [
            "resource \"aws_kms_alias\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_kms_key": {
        "prefix":"tf-aws_kms_key",
        "description": "Defines aws_kms_key",
        "body": [
            "resource \"aws_kms_key\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_lambda_alias": {
        "prefix":"tf-aws_lambda_alias",
        "description": "Defines aws_lambda_alias",
        "body": [
            "resource \"aws_lambda_alias\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_lambda_event_source_mapping": {
        "prefix":"tf-aws_lambda_event_source_mapping",
        "description": "Defines aws_lambda_event_source_mapping",
        "body": [
            "resource \"aws_lambda_event_source_mapping\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_lambda_function": {
        "prefix":"tf-aws_lambda_function",
        "description": "Defines aws_lambda_function",
        "body": [
            "resource \"aws_lambda_function\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_lambda_permission": {
        "prefix":"tf-aws_lambda_permission",
        "description": "Defines aws_lambda_permission",
        "body": [
            "resource \"aws_lambda_permission\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_opsworks_application": {
        "prefix":"tf-aws_opsworks_application",
        "description": "Defines aws_opsworks_application",
        "body": [
            "resource \"aws_opsworks_application\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_opsworks_custom_layer": {
        "prefix":"tf-aws_opsworks_custom_layer",
        "description": "Defines aws_opsworks_custom_layer",
        "body": [
            "resource \"aws_opsworks_custom_layer\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_opsworks_ganglia_layer": {
        "prefix":"tf-aws_opsworks_ganglia_layer",
        "description": "Defines aws_opsworks_ganglia_layer",
        "body": [
            "resource \"aws_opsworks_ganglia_layer\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_opsworks_haproxy_layer": {
        "prefix":"tf-aws_opsworks_haproxy_layer",
        "description": "Defines aws_opsworks_haproxy_layer",
        "body": [
            "resource \"aws_opsworks_haproxy_layer\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_opsworks_instance": {
        "prefix":"tf-aws_opsworks_instance",
        "description": "Defines aws_opsworks_instance",
        "body": [
            "resource \"aws_opsworks_instance\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_opsworks_java_app_layer": {
        "prefix":"tf-aws_opsworks_java_app_layer",
        "description": "Defines aws_opsworks_java_app_layer",
        "body": [
            "resource \"aws_opsworks_java_app_layer\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_opsworks_memcached_layer": {
        "prefix":"tf-aws_opsworks_memcached_layer",
        "description": "Defines aws_opsworks_memcached_layer",
        "body": [
            "resource \"aws_opsworks_memcached_layer\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_opsworks_mysql_layer": {
        "prefix":"tf-aws_opsworks_mysql_layer",
        "description": "Defines aws_opsworks_mysql_layer",
        "body": [
            "resource \"aws_opsworks_mysql_layer\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_opsworks_nodejs_app_layer": {
        "prefix":"tf-aws_opsworks_nodejs_app_layer",
        "description": "Defines aws_opsworks_nodejs_app_layer",
        "body": [
            "resource \"aws_opsworks_nodejs_app_layer\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_opsworks_permission": {
        "prefix":"tf-aws_opsworks_permission",
        "description": "Defines aws_opsworks_permission",
        "body": [
            "resource \"aws_opsworks_permission\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_opsworks_php_app_layer": {
        "prefix":"tf-aws_opsworks_php_app_layer",
        "description": "Defines aws_opsworks_php_app_layer",
        "body": [
            "resource \"aws_opsworks_php_app_layer\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_opsworks_rails_app_layer": {
        "prefix":"tf-aws_opsworks_rails_app_layer",
        "description": "Defines aws_opsworks_rails_app_layer",
        "body": [
            "resource \"aws_opsworks_rails_app_layer\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_opsworks_stack": {
        "prefix":"tf-aws_opsworks_stack",
        "description": "Defines aws_opsworks_stack",
        "body": [
            "resource \"aws_opsworks_stack\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_opsworks_static_web_layer": {
        "prefix":"tf-aws_opsworks_static_web_layer",
        "description": "Defines aws_opsworks_static_web_layer",
        "body": [
            "resource \"aws_opsworks_static_web_layer\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_opsworks_user_profile": {
        "prefix":"tf-aws_opsworks_user_profile",
        "description": "Defines aws_opsworks_user_profile",
        "body": [
            "resource \"aws_opsworks_user_profile\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_db_event_subscription": {
        "prefix":"tf-aws_db_event_subscription",
        "description": "Defines aws_db_event_subscription",
        "body": [
            "resource \"aws_db_event_subscription\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_db_instance": {
        "prefix":"tf-aws_db_instance",
        "description": "Defines aws_db_instance",
        "body": [
            "resource \"aws_db_instance\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_db_option_group": {
        "prefix":"tf-aws_db_option_group",
        "description": "Defines aws_db_option_group",
        "body": [
            "resource \"aws_db_option_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_db_parameter_group": {
        "prefix":"tf-aws_db_parameter_group",
        "description": "Defines aws_db_parameter_group",
        "body": [
            "resource \"aws_db_parameter_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_db_security_group": {
        "prefix":"tf-aws_db_security_group",
        "description": "Defines aws_db_security_group",
        "body": [
            "resource \"aws_db_security_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_db_subnet_group": {
        "prefix":"tf-aws_db_subnet_group",
        "description": "Defines aws_db_subnet_group",
        "body": [
            "resource \"aws_db_subnet_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_rds_cluster": {
        "prefix":"tf-aws_rds_cluster",
        "description": "Defines aws_rds_cluster",
        "body": [
            "resource \"aws_rds_cluster\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_rds_cluster_instance": {
        "prefix":"tf-aws_rds_cluster_instance",
        "description": "Defines aws_rds_cluster_instance",
        "body": [
            "resource \"aws_rds_cluster_instance\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_rds_cluster_parameter_group": {
        "prefix":"tf-aws_rds_cluster_parameter_group",
        "description": "Defines aws_rds_cluster_parameter_group",
        "body": [
            "resource \"aws_rds_cluster_parameter_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_redshift_cluster": {
        "prefix":"tf-aws_redshift_cluster",
        "description": "Defines aws_redshift_cluster",
        "body": [
            "resource \"aws_redshift_cluster\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_redshift_parameter_group": {
        "prefix":"tf-aws_redshift_parameter_group",
        "description": "Defines aws_redshift_parameter_group",
        "body": [
            "resource \"aws_redshift_parameter_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_redshift_security_group": {
        "prefix":"tf-aws_redshift_security_group",
        "description": "Defines aws_redshift_security_group",
        "body": [
            "resource \"aws_redshift_security_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_redshift_subnet_group": {
        "prefix":"tf-aws_redshift_subnet_group",
        "description": "Defines aws_redshift_subnet_group",
        "body": [
            "resource \"aws_redshift_subnet_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_waf_web_acl": {
        "prefix":"tf-aws_waf_web_acl",
        "description": "Defines aws_waf_web_acl",
        "body": [
            "resource \"aws_waf_web_acl\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_waf_byte_match_set": {
        "prefix":"tf-aws_waf_byte_match_set",
        "description": "Defines aws_waf_byte_match_set",
        "body": [
            "resource \"aws_waf_byte_match_set\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_waf_size_constraint_set": {
        "prefix":"tf-aws_waf_size_constraint_set",
        "description": "Defines aws_waf_size_constraint_set",
        "body": [
            "resource \"aws_waf_size_constraint_set\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_waf_rule": {
        "prefix":"tf-aws_waf_rule",
        "description": "Defines aws_waf_rule",
        "body": [
            "resource \"aws_waf_rule\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_waf_ipset": {
        "prefix":"tf-aws_waf_ipset",
        "description": "Defines aws_waf_ipset",
        "body": [
            "resource \"aws_waf_ipset\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_waf_xss_match_set": {
        "prefix":"tf-aws_waf_xss_match_set",
        "description": "Defines aws_waf_xss_match_set",
        "body": [
            "resource \"aws_waf_xss_match_set\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_waf_sql_injection_match_set": {
        "prefix":"tf-aws_waf_sql_injection_match_set",
        "description": "Defines aws_waf_sql_injection_match_set",
        "body": [
            "resource \"aws_waf_sql_injection_match_set\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_route53_delegation_set": {
        "prefix":"tf-aws_route53_delegation_set",
        "description": "Defines aws_route53_delegation_set",
        "body": [
            "resource \"aws_route53_delegation_set\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_route53_health_check": {
        "prefix":"tf-aws_route53_health_check",
        "description": "Defines aws_route53_health_check",
        "body": [
            "resource \"aws_route53_health_check\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_route53_record": {
        "prefix":"tf-aws_route53_record",
        "description": "Defines aws_route53_record",
        "body": [
            "resource \"aws_route53_record\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_route53_zone": {
        "prefix":"tf-aws_route53_zone",
        "description": "Defines aws_route53_zone",
        "body": [
            "resource \"aws_route53_zone\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_route53_zone_association": {
        "prefix":"tf-aws_route53_zone_association",
        "description": "Defines aws_route53_zone_association",
        "body": [
            "resource \"aws_route53_zone_association\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_s3_bucket": {
        "prefix":"tf-aws_s3_bucket",
        "description": "Defines aws_s3_bucket",
        "body": [
            "resource \"aws_s3_bucket\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_s3_bucket_notification": {
        "prefix":"tf-aws_s3_bucket_notification",
        "description": "Defines aws_s3_bucket_notification",
        "body": [
            "resource \"aws_s3_bucket_notification\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_s3_bucket_policy": {
        "prefix":"tf-aws_s3_bucket_policy",
        "description": "Defines aws_s3_bucket_policy",
        "body": [
            "resource \"aws_s3_bucket_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_ses_active_receipt_rule_set": {
        "prefix":"tf-aws_ses_active_receipt_rule_set",
        "description": "Defines aws_ses_active_receipt_rule_set",
        "body": [
            "resource \"aws_ses_active_receipt_rule_set\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_ses_receipt_filter": {
        "prefix":"tf-aws_ses_receipt_filter",
        "description": "Defines aws_ses_receipt_filter",
        "body": [
            "resource \"aws_ses_receipt_filter\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_ses_receipt_rule": {
        "prefix":"tf-aws_ses_receipt_rule",
        "description": "Defines aws_ses_receipt_rule",
        "body": [
            "resource \"aws_ses_receipt_rule\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_ses_receipt_rule_set": {
        "prefix":"tf-aws_ses_receipt_rule_set",
        "description": "Defines aws_ses_receipt_rule_set",
        "body": [
            "resource \"aws_ses_receipt_rule_set\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_simpledb_domain": {
        "prefix":"tf-aws_simpledb_domain",
        "description": "Defines aws_simpledb_domain",
        "body": [
            "resource \"aws_simpledb_domain\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_sns_topic": {
        "prefix":"tf-aws_sns_topic",
        "description": "Defines aws_sns_topic",
        "body": [
            "resource \"aws_sns_topic\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_sns_topic_policy": {
        "prefix":"tf-aws_sns_topic_policy",
        "description": "Defines aws_sns_topic_policy",
        "body": [
            "resource \"aws_sns_topic_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_sns_topic_subscription": {
        "prefix":"tf-aws_sns_topic_subscription",
        "description": "Defines aws_sns_topic_subscription",
        "body": [
            "resource \"aws_sns_topic_subscription\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_ssm_document": {
        "prefix":"tf-aws_ssm_document",
        "description": "Defines aws_ssm_document",
        "body": [
            "resource \"aws_ssm_document\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_sqs_queue": {
        "prefix":"tf-aws_sqs_queue",
        "description": "Defines aws_sqs_queue",
        "body": [
            "resource \"aws_sqs_queue\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_sqs_queue_policy": {
        "prefix":"tf-aws_sqs_queue_policy",
        "description": "Defines aws_sqs_queue_policy",
        "body": [
            "resource \"aws_sqs_queue_policy\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_customer_gateway": {
        "prefix":"tf-aws_customer_gateway",
        "description": "Defines aws_customer_gateway",
        "body": [
            "resource \"aws_customer_gateway\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_default_network_acl": {
        "prefix":"tf-aws_default_network_acl",
        "description": "Defines aws_default_network_acl",
        "body": [
            "resource \"aws_default_network_acl\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_default_route_table": {
        "prefix":"tf-aws_default_route_table",
        "description": "Defines aws_default_route_table",
        "body": [
            "resource \"aws_default_route_table\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_default_security_group": {
        "prefix":"tf-aws_default_security_group",
        "description": "Defines aws_default_security_group",
        "body": [
            "resource \"aws_default_security_group\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_flow_log": {
        "prefix":"tf-aws_flow_log",
        "description": "Defines aws_flow_log",
        "body": [
            "resource \"aws_flow_log\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_internet_gateway": {
        "prefix":"tf-aws_internet_gateway",
        "description": "Defines aws_internet_gateway",
        "body": [
            "resource \"aws_internet_gateway\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_main_route_table_association": {
        "prefix":"tf-aws_main_route_table_association",
        "description": "Defines aws_main_route_table_association",
        "body": [
            "resource \"aws_main_route_table_association\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_nat_gateway": {
        "prefix":"tf-aws_nat_gateway",
        "description": "Defines aws_nat_gateway",
        "body": [
            "resource \"aws_nat_gateway\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_network_acl": {
        "prefix":"tf-aws_network_acl",
        "description": "Defines aws_network_acl",
        "body": [
            "resource \"aws_network_acl\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_network_acl_rule": {
        "prefix":"tf-aws_network_acl_rule",
        "description": "Defines aws_network_acl_rule",
        "body": [
            "resource \"aws_network_acl_rule\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_network_interface": {
        "prefix":"tf-aws_network_interface",
        "description": "Defines aws_network_interface",
        "body": [
            "resource \"aws_network_interface\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_route": {
        "prefix":"tf-aws_route",
        "description": "Defines aws_route",
        "body": [
            "resource \"aws_route\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_route_table": {
        "prefix":"tf-aws_route_table",
        "description": "Defines aws_route_table",
        "body": [
            "resource \"aws_route_table\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_route_table_association": {
        "prefix":"tf-aws_route_table_association",
        "description": "Defines aws_route_table_association",
        "body": [
            "resource \"aws_route_table_association\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_security_group_rule": {
        "prefix":"tf-aws_security_group_rule",
        "description": "Defines aws_security_group_rule",
        "body": [
            "resource \"aws_security_group_rule\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_vpc_dhcp_options": {
        "prefix":"tf-aws_vpc_dhcp_options",
        "description": "Defines aws_vpc_dhcp_options",
        "body": [
            "resource \"aws_vpc_dhcp_options\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_vpc_dhcp_options_association": {
        "prefix":"tf-aws_vpc_dhcp_options_association",
        "description": "Defines aws_vpc_dhcp_options_association",
        "body": [
            "resource \"aws_vpc_dhcp_options_association\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_vpc_endpoint": {
        "prefix":"tf-aws_vpc_endpoint",
        "description": "Defines aws_vpc_endpoint",
        "body": [
            "resource \"aws_vpc_endpoint\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_vpc_peering_connection": {
        "prefix":"tf-aws_vpc_peering_connection",
        "description": "Defines aws_vpc_peering_connection",
        "body": [
            "resource \"aws_vpc_peering_connection\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_vpn_connection": {
        "prefix":"tf-aws_vpn_connection",
        "description": "Defines aws_vpn_connection",
        "body": [
            "resource \"aws_vpn_connection\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_vpn_connection_route": {
        "prefix":"tf-aws_vpn_connection_route",
        "description": "Defines aws_vpn_connection_route",
        "body": [
            "resource \"aws_vpn_connection_route\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_vpn_gateway": {
        "prefix":"tf-aws_vpn_gateway",
        "description": "Defines aws_vpn_gateway",
        "body": [
            "resource \"aws_vpn_gateway\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "aws_vpn_gateway_attachment": {
        "prefix":"tf-aws_vpn_gateway_attachment",
        "description": "Defines aws_vpn_gateway_attachment",
        "body": [
            "resource \"aws_vpn_gateway_attachment\" \"${MyAWSResource}\" {",
            "}"
        ]
    },
    "consul_keys": {
        "prefix":"tf-consul_keys",
        "description": "Defines consul_keys",
        "body": [
            "data \"consul_keys\" \"${MyConsulResource}\" {",
            "   key {",
            "       name = \"<your keyname here>\"",
            "   }",
            "}"
        ]
    },
    "consul_agent_service": {
        "prefix":"tf-consul_agent_service",
        "description": "Defines consul_agent_service",
        "body": [
            "resource \"consul_agent_service\" \"${MyResource}\" {",
            "}"
        ]
    },
    "consul_catalog_entry": {
        "prefix":"tf-consul_catalog_entry",
        "description": "Defines consul_catalog_entry",
        "body": [
            "resource \"consul_catalog_entry\" \"${MyResource}\" {",
            "}"
        ]
    },
    "consul_key_prefix": {
        "prefix":"tf-consul_key_prefix",
        "description": "Defines consul_key_prefix",
        "body": [
            "resource \"consul_key_prefix\" \"${MyResource}\" {",
            "}"
        ]
    },
    "consul_node": {
        "prefix":"tf-consul_node",
        "description": "Defines consul_node",
        "body": [
            "resource \"consul_node\" \"${MyResource}\" {",
            "}"
        ]
    },
    "consul_prepared_query": {
        "prefix":"tf-consul_prepared_query",
        "description": "Defines consul_prepared_query",
        "body": [
            "resource \"consul_prepared_query\" \"${MyResource}\" {",
            "}"
        ]
    },
    "consul_service": {
        "prefix":"tf-consul_service",
        "description": "Defines consul_service",
        "body": [
            "resource \"consul_service\" \"${MyResource}\" {",
            "}"
        ]
    },
    "docker_registry_image": {
        "prefix":"tf-docker_registry_image",
        "description": "Defines docker_registry_image",
        "body": [
            "data \"docker_registry_image\" \"${ubuntu}\" {",
            "   name = \"ubuntu:precise\"",
            "}"
        ]
    },
    "docker_container": {
        "prefix":"tf-docker_container",
        "description": "Defines docker_container",
        "body": [
            "resource \"docker_container\" \"${MyResource}\" {",
            "}"
        ]
    },
    "docker_image": {
        "prefix":"tf-docker_image",
        "description": "Defines docker_image",
        "body": [
            "resource \"docker_image\" \"${MyResource}\" {",
            "}"
        ]
    },
    "docker_network": {
        "prefix":"tf-docker_network",
        "description": "Defines docker_network",
        "body": [
            "resource \"docker_network\" \"${MyResource}\" {",
            "}"
        ]
    },
    "docker_volume": {
        "prefix":"tf-docker_volume",
        "description": "Defines docker_volume",
        "body": [
            "resource \"docker_volume\" \"${MyResource}\" {",
            "}"
        ]
    },
    "heroku": {
        "prefix":"tf-heroku",
        "description": "Defines heroku",
        "body": [
            "provider \"heroku\" {",
            "   email = \"ops@company.com\"",
            "   api_key = \"\\${var.heroku_api_key}\"",
            "}"
        ]
    },
    "heroku_addon": {
        "prefix":"tf-heroku_addon",
        "description": "Defines heroku_addon",
        "body": [
            "resource \"heroku_addon\" \"${MyResource}\" {",
            "}"
        ]
    },
    "heroku_app": {
        "prefix":"tf-heroku_app",
        "description": "Defines heroku_app",
        "body": [
            "resource \"heroku_app\" \"${MyResource}\" {",
            "}"
        ]
    },
    "heroku_cert": {
        "prefix":"tf-heroku_cert",
        "description": "Defines heroku_cert",
        "body": [
            "resource \"heroku_cert\" \"${MyResource}\" {",
            "}"
        ]
    },
    "heroku_domain": {
        "prefix":"tf-heroku_domain",
        "description": "Defines heroku_domain",
        "body": [
            "resource \"heroku_domain\" \"${MyResource}\" {",
            "}"
        ]
    },
    "heroku_drain": {
        "prefix":"tf-heroku_drain",
        "description": "Defines heroku_drain",
        "body": [
            "resource \"heroku_drain\" \"${MyResource}\" {",
            "}"
        ]
    },
    "digitalocean": {
        "prefix":"tf-digitalocean",
        "description": "Defines digitalocean",
        "body": [
            "provider \"digitalocean\" {",
            "   token = \"\\${var.${do_token}}\"",
            "}"
        ]
    },
    "digitalocean_domain": {
        "prefix":"tf-digitalocean_domain",
        "description": "Defines digitalocean_domain",
        "body": [
            "resource \"digitalocean_domain\" \"${MyResource}\" {",
            "}"
        ]
    },
    "digitalocean_droplet": {
        "prefix":"tf-digitalocean_droplet",
        "description": "Defines digitalocean_droplet",
        "body": [
            "resource \"digitalocean_droplet\" \"${MyResource}\" {",
            "}"
        ]
    },
    "digitalocean_floating_ip": {
        "prefix":"tf-digitalocean_floating_ip",
        "description": "Defines digitalocean_floating_ip",
        "body": [
            "resource \"digitalocean_floating_ip\" \"${MyResource}\" {",
            "}"
        ]
    },
    "digitalocean_record": {
        "prefix":"tf-digitalocean_record",
        "description": "Defines digitalocean_record",
        "body": [
            "resource \"digitalocean_record\" \"${MyResource}\" {",
            "}"
        ]
    },
    "digitalocean_ssh_key": {
        "prefix":"tf-digitalocean_ssh_key",
        "description": "Defines digitalocean_ssh_key",
        "body": [
            "resource \"digitalocean_ssh_key\" \"${MyResource}\" {",
            "}"
        ]
    },
    "digitalocean_tag": {
        "prefix":"tf-digitalocean_tag",
        "description": "Defines digitalocean_tag",
        "body": [
            "resource \"digitalocean_tag\" \"${MyResource}\" {",
            "}"
        ]
    },
    "digitalocean_volume": {
        "prefix":"tf-digitalocean_volume",
        "description": "Defines digitalocean_volume",
        "body": [
            "resource \"digitalocean_volume\" \"${MyResource}\" {",
            "}"
        ]
    },
    "bitbucket": {
        "prefix":"tf-bitbucket",
        "description": "Defines bitbucket",
        "body": [
            "provider \"bitbucket\" {",
            "   username = \"${bitbucketUsername}\"",
            "   password = \"****\"",
            "}"
        ]
    },
    "bitbucket_default_reviewers": {
        "prefix":"tf-bitbucket_default_reviewers",
        "description": "Defines bitbucket_default_reviewers",
        "body": [
            "resource \"bitbucket_default_reviewers\" \"${MyResource}\" {",
            "}"
        ]
    },
    "bitbucket_hook": {
        "prefix":"tf-bitbucket_hook",
        "description": "Defines bitbucket_hook",
        "body": [
            "resource \"bitbucket_hook\" \"${MyResource}\" {",
            "}"
        ]
    },
    "bitbucket_repository": {
        "prefix":"tf-bitbucket_repository",
        "description": "Defines bitbucket_repository",
        "body": [
            "resource \"bitbucket_repository\" \"${MyResource}\" {",
            "}"
        ]
    },
    "github_membership": {
        "prefix":"tf-github_membership",
        "description": "Defines github_membership",
        "body": [
            "resource \"github_membership\" \"${MyResource}\" {",
            "}"
        ]
    },
    "github_repository": {
        "prefix":"tf-github_repository",
        "description": "Defines github_repository",
        "body": [
            "resource \"github_repository\" \"${MyResource}\" {",
            "   name        = \"example\"",
            "   description = \"example\"",
            "",
            "}"
        ]
    },
    "github_repository_collaborator": {
        "prefix":"tf-github_repository_collaborator",
        "description": "Defines github_repository_collaborator",
        "body": [
            "resource \"github_repository_collaborator\" \"${MyResource}\" {",
            "}"
        ]
    },
    "github_team": {
        "prefix":"tf-github_team",
        "description": "Defines github_team",
        "body": [
            "resource \"github_team\" \"${MyResource}\" {",
            "}"
        ]
    },
    "github_team_membership": {
        "prefix":"tf-github_team_membership",
        "description": "Defines github_team_membership",
        "body": [
            "resource \"github_team_membership\" \"${MyResource}\" {",
            "}"
        ]
    },
    "github_team_repository": {
        "prefix":"tf-github_team_repository",
        "description": "Defines github_team_repository",
        "body": [
            "resource \"github_team_repository\" \"${MyResource}\" {",
            "}"
        ]
    },
    "github_issue_label": {
        "prefix":"tf-github_issue_label",
        "description": "Defines github_issue_label",
        "body": [
            "resource \"github_issue_label\" \"${MyResource}\" {",
            "}"
        ]
    },
    "archive": {
        "prefix":"tf-archive",
        "description": "Defines archive",
        "body": [
            "provider \"archive\" {",
            "}"
        ]
    },
    "archive_file": {
        "prefix":"tf-archive_file",
        "description": "Defines archive_file",
        "body": [
            "data \"archive_file\" \"${init}\" {",
            "   type        = \"zip\"",
            "   source_file = \"\\${path.module}/init.tpl\"",
            "   output_path = \"\\${path.module}/files/init.zip\"",
            "}"
        ]
    },
    "atlas": {
        "prefix":"tf-atlas",
        "description": "Defines atlas",
        "body": [
            "provider \"atlas\" {",
            "   token = \"${atlasToken}\"",
            "}"
        ]
    },
    "atlas_artifact_data": {
        "prefix":"tf-atlas_artifact",
        "description": "Defines atlas_artifact data",
        "body": [
            "data \"atlas_artifact\" \"${web}\" {",
            "   name = \"hashicorp/web\"",
            "   type = \"amazon.image\"",
            "   build = \"latest\"",
            "   metadata {",
            "       arch = \"386\"",
            "   }",
            "}"
        ]
    },
    "chef": {
        "prefix":"tf-chef",
        "description": "Defines chef",
        "body": [
            "provider \"chef\" {",
            "   server_url  = \"${url}\"",
            "   client_name = \"samplechef\"",
            "}"
        ]
    },
    "chef_data_bag": {
        "prefix":"tf-chef_data_bag",
        "description": "Defines chef_data_bag resource",
        "body": [
            "resource \"chef_data_bag\" \"${MyResource}\" {",
            "   name = \"sampleName\"",
            "}"
        ]
    },
    "chef_data_bag_item": {
        "prefix":"tf-chef_data_bag_item",
        "description": "Defines chef_data_bag_item resource",
        "body": [
            "resource \"chef_data_bag_item\" \"${MyResource}\" {",
            "   data_bag_name = \"example-data-bag\"",
            "content_json = <<EOT",
            "{",
            "   \"id\": \"example-item\",",
            "   \"any_arbitrary_data\": true",
            "}",
            "EOT",
            "}"
        ]
    },
    "chef_environment": {
        "prefix":"tf-chef_environment",
        "description": "Defines chef_environment resource",
        "body": [
            "resource \"chef_environment\" \"${MyResource}\" {",
            "   name = \"example-environment\"",
            "}"
        ]
    },
    "chef_node": {
        "prefix":"tf-chef_node",
        "description": "Defines chef_node resource",
        "body": [
            "resource \"chef_node\" \"${MyResource}\" {",
            "   name = \"example-environment\"",
            "}"
        ]
    },
    "chef_role": {
        "prefix":"tf-chef_role",
        "description": "Defines chef_role resource",
        "body": [
            "resource \"chef_role\" \"${MyResource}\" {",
            "   name = \"example-environment\"",
            "}"
        ]
    },
    "cloudflare": {
        "prefix":"tf-cloudflare",
        "description": "Defines cloudflare provider",
        "body": [
            "provider \"cloudflare\" {",
            "   email  = \"${email}\"",
            "   token = \"example-token\"",
            "}"
        ]
    },
    "cloudflare_record": {
        "prefix":"tf-cloudflare_record",
        "description": "Defines cloudflare_record resource",
        "body": [
            "resource \"chef_role\" \"${MyResource}\" {",
            "   domain = \"cloudflare_domain\"",
            "   name = \"terraform\"",
            "   value = \"192.168.0.11\"",
            "   type = \"A\"",
            "   ttl = 3600",
            "}"
        ]
    },
    "mysql": {
        "prefix":"tf-mysql",
        "description": "Defines mysql provider",
        "body": [
            "provider \"mysql\" {",
            "   endpoint  = \"endpoint-example\"",
            "   username  = \"username-example\"",
            "   password  = \"password-example\"",
            "}"
        ]
    },
    "mysql_database": {
        "prefix":"tf-mysql_database",
        "description": "Defines mysql_database resource",
        "body": [
            "resource \"mysql_database\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "}"
        ]
    },
    "mysql_grant": {
        "prefix":"tf-mysql_grant",
        "description": "Defines mysql_grant resource",
        "body": [
            "resource \"mysql_grant\" \"${MyResource}\" {",
            "   user        = \"example-user\"",
            "   host        = \"example-host\"",
            "   database    = \"example-database\"",
            "   privileges  = \"example-privileges \"",
            "}"
        ]
    },
    "mysql_user": {
        "prefix":"tf-mysql_user",
        "description": "Defines mysql_user resource",
        "body": [
            "resource \"mysql_user\" \"${MyResource}\" {",
            "   user        = \"example-user\"",
            "   host        = \"example-host\"",
            "   password    = \"example-password \"",
            "}"
        ]
    },
    "postgresql": {
        "prefix":"tf-postgresql",
        "description": "Defines postgresql provider",
        "body": [
            "provider \"postgresql\" {",
            "   host        = \"host-example\"",
            "   port        = \"port-example\"",
            "   username    = \"username-example\"",
            "   password    = \"password-example\"",
            "   ssl_mode    = \"ssl_mode-example\"",
            "}"
        ]
    },
    "postgresql_database": {
        "prefix":"tf-postgresql_database",
        "description": "Defines postgresql_database resource",
        "body": [
            "resource \"postgresql_database\" \"${MyResource}\" {",
            "   name    = \"example-name\"",
            "   owner   = \"example-owner\"",
            "}"
        ]
    },
    "postgresql_role": {
        "prefix":"tf-postgresql_role",
        "description": "Defines postgresql_role resource",
        "body": [
            "resource \"postgresql_role\" \"${MyResource}\" {",
            "   name        = \"example-name\"",
            "   login       = true",
            "   password    = \"example-password\"",
            "   encrypted   = true",
            "}"
        ]
    },
    "postgresql_extension": {
        "prefix":"tf-postgresql_extension",
        "description": "Defines postgresql_extension resource",
        "body": [
            "resource \"postgresql_extension\" \"${MyResource}\" {",
            "   name        = \"example-name\"",
            "}"
        ]
    },
    "google": {
        "prefix":"tf-google",
        "description": "Defines google provider",
        "body": [
            "provider \"google\" {",
            "   credentials = \"credentials -example\"",
            "   project     = \"project-example\"",
            "   region      = \"us-central1\"",
            "}"
        ]
    },
    "google_iam_policy": {
        "prefix":"tf-google_iam_policy",
        "description": "Defines google_iam_policy policy",
        "body": [
            "data \"google_iam_policy\" \"${admin}\" {",
            "   binding {",
            "       role = \"roles/compute.instanceAdmin\"",
            "           members = [",
            "               \"serviceAccount:your-custom-sa@your-project.iam.gserviceaccount.com\",",
            "           ]",
            "   }",
            "   binding {",
            "       role = \"roles/storage.objectViewer\"",
            "       members = [",
            "           \"user:evanbrown@google.com\",",
            "       ]",
            "   }",
            "}"
        ]
    },
    "google_project": {
        "prefix":"tf-google_project",
        "description": "Defines google_project resource",
        "body": [
            "resource \"google_project\" \"${MyResource}\" {",
            "   id          = \"example-id\"",
            "   policy_data = \"example-policy_data\"",
            "}"
        ]
    },
    "google_compute_address": {
        "prefix":"tf-google_compute_address",
        "description": "Defines google_compute_address resource",
        "body": [
            "resource \"google_compute_address\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "}"
        ]
    },
    "google_compute_autoscaler": {
        "prefix":"tf-google_compute_autoscaler",
        "description": "Defines google_compute_autoscaler resource",
        "body": [
            "resource \"google_compute_autoscaler\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   zone = \"example-zone\"",
            "   target = \"example-target\"",
            "   autoscaling_policy = {",
            "       max_replicas    = 5",
            "       min_replicas    = 1",
            "       cooldown_period = 60\n",
            "       cpu_utilization {",
            "           target = 0.5",
            "       }",
            "   }",
            "}"
        ]
    },
    "google_pubsub_subscription": {
        "prefix":"tf-google_pubsub_subscription",
        "description": "Defines google_pubsub_subscription resource",
        "body": [
            "resource \"google_pubsub_subscription\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   topic = \"example-topic\"",
            "}"
        ]
    },
    "google_compute_backend_service": {
        "prefix":"tf-google_compute_backend_service",
        "description": "Defines google_compute_backend_service resource",
        "body": [
            "resource \"google_compute_backend_service\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"",
            "   health_checks  = [\"example-health_checks\"]",
            "}"
        ]
    },
    "google_compute_disk": {
        "prefix":"tf-google_compute_disk",
        "description": "Defines google_compute_disk resource",
        "body": [
            "resource \"google_compute_disk\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   type = \"pd-ssd\"",
            "   zone = \"us-central1-a\"",
            "   image = \"debian7-wheezy\"",
            "}"
        ]
    },
    "google_compute_firewall": {
        "prefix":"tf-google_compute_firewall",
        "description": "Defines google_compute_firewall resource",
        "body": [
            "resource \"google_compute_firewall\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   network = \"example-network\"",
            "   allow {",
            "       protocol = \"icmp\"",
            "   }",
            "}"
        ]
    },
    "google_compute_forwarding_rule": {
        "prefix":"tf-google_compute_forwarding_rule",
        "description": "Defines google_compute_forwarding_rule resource",
        "body": [
            "resource \"google_compute_forwarding_rule\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   target = \"\\${google_compute_target_pool.default.self_link}\"",
            "   port_range = \"80\"",
            "}"
        ]
    },
    "google_compute_global_address": {
        "prefix":"tf-google_compute_global_address",
        "description": "Defines google_compute_global_address resource",
        "body": [
            "resource \"google_compute_global_address\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "}"
        ]
    },
    "google_compute_global_forwarding_rule": {
        "prefix":"tf-google_compute_global_forwarding_rule",
        "description": "Defines google_compute_global_forwarding_rule resource",
        "body": [
            "resource \"google_compute_global_forwarding_rule\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   target = \"\\${google_compute_target_http_proxy.default.self_link}\"",
            "   port_range = \"80\"",
            "}"
        ]
    },
    "google_compute_http_health_check": {
        "prefix":"tf-google_compute_http_health_check",
        "description": "Defines google_compute_http_health_check resource",
        "body": [
            "resource \"google_compute_http_health_check\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   request_path  = \"/health_check\"",
            "   timeout_sec = 1",
            "   check_interval_sec = 1",
            "}"
        ]
    },
    "google_compute_https_health_check": {
        "prefix":"tf-google_compute_https_health_check",
        "description": "Defines google_compute_https_health_check resource",
        "body": [
            "resource \"google_compute_https_health_check\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   request_path  = \"/health_check\"",
            "   timeout_sec = 1",
            "   check_interval_sec = 1",
            "}"
        ]
    },
    "google_compute_image": {
        "prefix":"tf-google_compute_image",
        "description": "Defines google_compute_image resource",
        "body": [
            "resource \"google_compute_image\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   raw_disk {",
            "       source = \"https://storage.googleapis.com/my-bucket/my-disk-image-tarball.tar.gz\"",
            "   }",
            "}"
        ]
    },
    "google_compute_instance": {
        "prefix":"tf-google_compute_instance",
        "description": "Defines google_compute_instance resource",
        "body": [
            "resource \"google_compute_instance\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   machine_type = \"n1-standard-1\"",
            "   zone = \"us-central1-a\"",
            "   disk { image = \"debian-cloud/debian-8\" }",
            "}"
        ]
    },
    "google_compute_instance_group": {
        "prefix":"tf-google_compute_instance_group",
        "description": "Defines google_compute_instance_group resource",
        "body": [
            "resource \"google_compute_instance_group\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"",
            "   zone = \"us-central1-a\"",
            "}"
        ]
    },
    "google_compute_instance_group_manager": {
        "prefix":"tf-google_compute_instance_group_manager",
        "description": "Defines google_compute_instance_group_manager resource",
        "body": [
            "resource \"google_compute_instance_group_manager\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"",
            "   base_instance_name = \"example-base_instance_name\"",
            "   instance_template = \"\\${google_compute_instance_template.foobar.self_link}\"",
            "   zone = \"us-central1-a\"",
            "}"
        ]
    },
    "google_compute_instance_template": {
        "prefix":"tf-google_compute_instance_template",
        "description": "Defines google_compute_instance_template resource",
        "body": [
            "resource \"google_compute_instance_template\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"",
            "   machine_type = \"n1-standard-1\"",
            "   disk {",
            "       source_image = \"debian-cloud/debian-8\"",
            "       auto_delete = true",
            "       boot = true",
            "   }",
            "}"
        ]
    },
    "google_compute_network": {
        "prefix":"tf-google_compute_network",
        "description": "Defines google_compute_network resource",
        "body": [
            "resource \"google_compute_network\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   ipv4_range = \"10.0.0.0/16\"",
            "}"
        ]
    },
    "google_compute_project_metadata": {
        "prefix":"tf-google_compute_project_metadata",
        "description": "Defines google_compute_project_metadata resource",
        "body": [
            "resource \"google_compute_project_metadata\" \"${MyResource}\" {",
            "   metadata {",
            "       foo  = \"bar\"",
            "       fizz = \"buzz\"",
            "       13   = \"42\"",
            "   }",
            "}"
        ]
    },
    "google_compute_route": {
        "prefix":"tf-google_compute_route",
        "description": "Defines google_compute_route resource",
        "body": [
            "resource \"google_compute_route\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   dest_range = \"15.0.0.0/24\"",
            "   network = \"\\${google_compute_network.foobar.name}\"",
            "   next_hop_ip = \"10.0.1.5\"",
            "   priority = 100",
            "}"
        ]
    },
    "google_compute_ssl_certificate": {
        "prefix":"tf-google_compute_ssl_certificate",
        "description": "Defines google_compute_ssl_certificate resource",
        "body": [
            "resource \"google_compute_ssl_certificate\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"",
            "   private_key = \"\\${file(\"path/to/private.key\")}\"",
            "   certificate = \"\\${file(\"path/to/certificate.crt\")}",
            "}"
        ]
    },
    "google_compute_subnetwork": {
        "prefix":"tf-google_compute_subnetwork",
        "description": "Defines google_compute_subnetwork resource",
        "body": [
            "resource \"google_compute_subnetwork\" \"${MyResource}\" {",
            "   name          = \"default-us-east1\"",
            "   ip_cidr_range = \"10.0.0.0/16\"",
            "   network       = \"\\${google_compute_network.default.self_link}\"",
            "   region        = \"us-east1\"",
            "}"
        ]
    },
    "google_compute_target_http_proxy": {
        "prefix":"tf-google_compute_target_http_proxy",
        "description": "Defines google_compute_target_http_proxy resource",
        "body": [
            "resource \"google_compute_target_http_proxy\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"",
            "   url_map = \"\\${google_compute_url_map.default.self_link}\"",
            "}"
        ]
    },
    "google_compute_target_https_proxy": {
        "prefix":"tf-google_compute_target_https_proxy",
        "description": "Defines google_compute_target_https_proxy resource",
        "body": [
            "resource \"google_compute_target_https_proxy\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"",
            "   url_map = \"\\${google_compute_url_map.default.self_link}\"",
            "   ssl_certificates = [\"\\${google_compute_ssl_certificate.default.self_link}\"]",
            "}"
        ]
    },
    "google_compute_target_pool": {
        "prefix":"tf-google_compute_target_pool",
        "description": "Defines google_compute_target_pool resource",
        "body": [
            "resource \"google_compute_target_pool\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"\n",
            "   instances = [",
            "       \"us-central1-a/myinstance1\",",
            "       \"us-central1-b/myinstance2\",",
            "   ]\n",
            "   health_checks = [",
            "       \"\\${google_compute_http_health_check.default.name}\",",
            "   ]",
            "}"
        ]
    },
    "google_compute_url_map": {
        "prefix":"tf-google_compute_url_map",
        "description": "Defines google_compute_url_map resource",
        "body": [
            "resource \"google_compute_url_map\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"\n",
            "   default_service = \"\\${google_compute_backend_service.home.self_link}\"",
            "}"
        ]
    },
    "google_compute_vpn_gateway": {
        "prefix":"tf-google_compute_vpn_gateway",
        "description": "Defines google_compute_vpn_gateway resource",
        "body": [
            "resource \"google_compute_vpn_gateway\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"\n",
            "   network = \"\\${google_compute_network.network1.self_link}\"",
            "   region = \"\\${var.region}\"",
            "}"
        ]
    },
    "google_compute_vpn_tunnel": {
        "prefix":"tf-google_compute_vpn_tunnel",
        "description": "Defines google_compute_vpn_tunnel resource",
        "body": [
            "resource \"google_compute_vpn_tunnel\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"\n",
            "   peer_ip = \"15.0.0.120\"",
            "   shared_secret = \"a shared_secret\"",
            "   target_vpn_gateway = \"\\${google_compute_vpn_gateway.target_gateway.self_link}\"",
            "}"
        ]
    },
    "google_container_cluster": {
        "prefix":"tf-google_container_cluster",
        "description": "Defines google_container_cluster resource",
        "body": [
            "resource \"google_container_cluster\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"\n",
            "   zone = \"us-central1-a\"",
            "   initial_node_count = 1\n",
            "   master_auth {",
            "       username = \"mr.yoda\"",
            "       password = \"adoy.rm\"",
            "   }",
            "}"
        ]
    },
    "google_dns_managed_zone": {
        "prefix":"tf-google_dns_managed_zone",
        "description": "Defines google_dns_managed_zone resource",
        "body": [
            "resource \"google_dns_managed_zone\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"\n",
            "   dns_name = \"prod.mydomain.com.\"",
            "}"
        ]
    },
    "google_dns_record_set": {
        "prefix":"tf-google_dns_record_set",
        "description": "Defines google_dns_record_set resource",
        "body": [
            "resource \"google_dns_record_set\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"\n",
            "   type = \"A\"",
            "   ttl = 300",
            "}"
        ]
    },
    "google_pubsub_topic": {
        "prefix":"tf-google_pubsub_topic",
        "description": "Defines google_pubsub_topic resource",
        "body": [
            "resource \"google_pubsub_topic\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"\n",
            "}"
        ]
    },
    "google_sql_database": {
        "prefix":"tf-google_sql_database",
        "description": "Defines google_sql_database resource",
        "body": [
            "resource \"google_sql_database\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"\n",
            "   instance = \"\\${google_sql_database_instance.master.name}\"",
            "}"
        ]
    },
    "google_sql_database_instance": {
        "prefix":"tf-google_sql_database_instance",
        "description": "Defines google_sql_database_instance resource",
        "body": [
            "resource \"google_sql_database_instance\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"\n",
            "   region = \"us-central",
            "   settings { tier = \"D0\" }",
            "}"
        ]
    },
    "google_sql_user": {
        "prefix":"tf-google_sql_user",
        "description": "Defines google_sql_user resource",
        "body": [
            "resource \"google_sql_user\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"\n",
            "   host = \"me.com",
            "   password = \"example-password\"",
            "   instance = \"\\${google_sql_database_instance.master.name}\"",
            "}"
        ]
    },
    "google_storage_bucket": {
        "prefix":"tf-google_storage_bucket",
        "description": "Defines google_storage_bucket resource",
        "body": [
            "resource \"google_storage_bucket\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   description = \"example-description\"\n",
            "}"
        ]
    },
    "google_storage_bucket_acl": {
        "prefix":"tf-google_storage_bucket_acl",
        "description": "Defines google_storage_bucket_acl resource",
        "body": [
            "resource \"google_storage_bucket_acl\" \"${MyResource}\" {",
            "   bucket = \"\\${google_storage_bucket.image_store.name}\"",
            "}"
        ]
    },
    "google_storage_bucket_object": {
        "prefix":"tf-google_storage_bucket_object",
        "description": "Defines google_storage_bucket_object resource",
        "body": [
            "resource \"google_storage_bucket_object\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   bucket = \"bucket-store\"",
            "   source = \"/images/nature/garden-tiger-moth.jpg\"",
            "}"
        ]
    },
    "google_storage_object_acl": {
        "prefix":"tf-google_storage_object_acl",
        "description": "Defines google_storage_object_acl resource",
        "body": [
            "resource \"google_storage_object_acl\" \"${MyResource}\" {",
            "   bucket = \"\\${google_storage_bucket.image_store.name}\"",
            "   object = \"\\${google_storage_bucket_object.image_store.name}\"",
            "}"
        ]
    },
    "azurerm": {
        "prefix":"tf-azurerm",
        "description": "Defines azurerm provider",
        "body": [
            "provider \"azurerm\" {",
            "   subscription_id = \"subscription_id-example\"",
            "   client_id = \"client_id-example\"",
            "   client_secret = \"client_secret-example\"",
            "   tenant_id = \"tenant_id-example\"",
            "}"
        ]
    },
    "azurerm_client_config": {
        "prefix":"tf-azurerm_client_config",
        "description": "Defines azurerm_client_config provider",
        "body": [
            "data \"azurerm_client_config\" {",
            "}"
        ]
    },
    "azurerm_resource_group": {
        "prefix":"tf-azurerm_resource_group",
        "description": "Defines azurerm_resource_group resource",
        "body": [
            "resource \"azurerm_resource_group\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   location = \"West US\"",
            "}"
        ]
    },
    "azurerm_cdn_profile": {
        "prefix":"tf-azurerm_cdn_profile",
        "description": "Defines azurerm_cdn_profile resource",
        "body": [
            "resource \"azurerm_cdn_profile\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   location = \"West US\"",
            "   sku = \"Standard_Verizon\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "}"
        ]
    },
    "azurerm_cdn_endpoint": {
        "prefix":"tf-azurerm_cdn_endpoint",
        "description": "Defines azurerm_cdn_endpoint resource",
        "body": [
            "resource \"azurerm_cdn_endpoint\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   profile_name = \"\\${azurerm_cdn_profile.test.name}\"",
            "   location = \"West US\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "}"
        ]
    },
    "azurerm_dns_a_record": {
        "prefix":"tf-azurerm_dns_a_record",
        "description": "Defines azurerm_dns_a_record resource",
        "body": [
            "resource \"azurerm_dns_a_record\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   zone_name = \"\\${azurerm_dns_zone.test.name}\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   ttl = \"300\"",
            "   records = [\"10.0.180.17\"]",
            "}"
        ]
    },
    "azurerm_dns_aaaa_record": {
        "prefix":"tf-azurerm_dns_aaaa_record",
        "description": "Defines azurerm_dns_aaaa_record resource",
        "body": [
            "resource \"azurerm_dns_aaaa_record\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   zone_name = \"\\${azurerm_dns_zone.test.name}\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   ttl = \"300\"",
            "   records = [\"2607:f8b0:4009:1803::1005\"]",
            "}"
        ]
    },
    "azurerm_dns_cname_record": {
        "prefix":"tf-azurerm_dns_cname_record",
        "description": "Defines azurerm_dns_cname_record resource",
        "body": [
            "resource \"azurerm_dns_cname_record\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   zone_name = \"\\${azurerm_dns_zone.test.name}\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   ttl = \"300\"",
            "   records = [\"contoso.com\"]",
            "}"
        ]
    },
    "azurerm_dns_mx_record": {
        "prefix":"tf-azurerm_dns_mx_record",
        "description": "Defines azurerm_dns_mx_record resource",
        "body": [
            "resource \"azurerm_dns_mx_record\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   zone_name = \"\\${azurerm_dns_zone.test.name}\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   ttl = \"300\"\n",
            "   record {",
            "       preference = 10",
            "       exchange = \"mail1.contoso.com\"",
            "   }\n",
            "   record {",
            "       preference = 20",
            "       exchange = \"mail2.contoso.com\"",
            "   }",
            "}"
        ]
    },
    "azurerm_dns_ns_record": {
        "prefix":"tf-azurerm_dns_ns_record",
        "description": "Defines azurerm_dns_ns_record resource",
        "body": [
            "resource \"azurerm_dns_ns_record\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   zone_name = \"\\${azurerm_dns_zone.test.name}\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   ttl = \"300\"\n",
            "   record {",
            "       nsdname = \"ns1.contoso.com\"",
            "   }\n",
            "   record {",
            "       nsdname = \"ns2.contoso.com\"",
            "   }",
            "}"
        ]
    },
    "azurerm_dns_srv_record": {
        "prefix":"tf-azurerm_dns_srv_record",
        "description": "Defines azurerm_dns_srv_record resource",
        "body": [
            "resource \"azurerm_dns_srv_record\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   zone_name = \"\\${azurerm_dns_zone.test.name}\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   ttl = \"300\"\n",
            "   record {",
            "       priority = 1",
            "       weight = 5",
            "       port = 8080",
            "       target = \"target1.contoso.com\"",
            "   }",
            "}"
        ]
    },
    "azurerm_dns_txt_record": {
        "prefix":"tf-azurerm_dns_txt_record",
        "description": "Defines azurerm_dns_txt_record resource",
        "body": [
            "resource \"azurerm_dns_txt_record\" \"${MyResource}\" {",
            "   name = \"example-name\"",
            "   zone_name = \"\\${azurerm_dns_zone.test.name}\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   ttl = \"300\"\n",
            "   record {",
            "       value = \"google-site-authenticator\"",
            "   }\n",
            "   record {",
            "       value = \"more site information here\"",
            "   }",
            "}"
        ]
    },
    "azurerm_dns_zone": {
        "prefix":"tf-azurerm_dns_zone",
        "description": "Defines azurerm_dns_zone resource",
        "body": [
            "resource \"azurerm_dns_zone\" \"${MyResource}\" {",
            "   name = \"mydomain.com\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "}"
        ]
    },
    "azurerm_eventhub": {
        "prefix":"tf-azurerm_eventhub",
        "description": "Defines azurerm_eventhub resource",
        "body": [
            "resource \"azurerm_eventhub\" \"${MyResource}\" {",
            "   name                = \"acceptanceTestEventHub\"",
            "   namespace_name      = \"\\${azurerm_eventhub_namespace.test.name}\"",
            "   location            = \"\\${azurerm_resource_group.test.location}\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   partition_count     = 2",
            "   message_retention   = 2",
            "}"
        ]
    },
    "azurerm_eventhub_namespace": {
        "prefix":"tf-azurerm_eventhub_namespace",
        "description": "Defines azurerm_eventhub_namespace resource",
        "body": [
            "resource \"azurerm_eventhub_namespace\" \"${MyResource}\" {",
            "   name = \"acceptanceTestEventHubNamespace\"",
            "   location = \"West US\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   sku = \"Basic\"",
            "   capacity = 2",
            "}"
        ]
    },
    "azurerm_key_vault": {
        "prefix":"tf-azurerm_key_vault",
        "description": "Defines azurerm_key_vault resource",
        "body": [
            "resource \"azurerm_key_vault\" \"${MyResource}\" {",
            "   name = \"testvault\"",
            "   location = \"West US\"",
            "   resource_group_name = \"${azurerm_resource_group.test.name}\"\n",
            "   sku {",
            "       name = \"standard\"",
            "   }\n",
            "   tenant_id = \"d6e396d0-5584-41dc-9fc0-268df99bc610\"\n",
            "   access_policy {",
            "       tenant_id = \"d6e396d0-5584-41dc-9fc0-268df99bc610\"",
            "       object_id = \"d746815a-0433-4a21-b95d-fc437d2d475b\"",
            "       key_permissions = [",
            "           \"all\"",
            "       ]",
            "       secret_permissions = [",
            "           \"get\"",
            "       ]",
            "   }\n",
            "   enabled_for_disk_encryption = true",
            "}"
        ]
    },
    "azurerm_lb": {
        "prefix":"tf-azurerm_lb",
        "description": "Defines azurerm_lb resource",
        "body": [
            "resource \"azurerm_lb\" \"${MyResource}\" {",
            "   name = \"acceptanceTestEventHubNamespace\"",
            "   location = \"West US\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "}"
        ]
    },
    "azurerm_lb_backend_address_pool": {
        "prefix":"tf-azurerm_lb_backend_address_pool",
        "description": "Defines azurerm_lb_backend_address_pool resource",
        "body": [
            "resource \"azurerm_lb_backend_address_pool\" \"${MyResource}\" {",
            "   name = \"BackEndAddressPool\"",
            "   location = \"West US\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   loadbalancer_id = \"\\${azurerm_lb.test.id}\"",
            "}"
        ]
    },
    "azurerm_lb_rule": {
        "prefix":"tf-azurerm_lb_rule",
        "description": "Defines azurerm_lb_rule resource",
        "body": [
            "resource \"azurerm_lb_rule\" \"${MyResource}\" {",
            "   name = \"LBRule\"",
            "   location = \"West US\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   loadbalancer_id = \"\\${azurerm_lb.test.id}\"",
            "   protocol = \"Tcp\"",
            "   frontend_port = 3389",
            "   backend_port = 3389",
            "   frontend_ip_configuration_name = \"PublicIPAddress\"",
            "}"
        ]
    },
    "azurerm_lb_nat_rule": {
        "prefix":"tf-azurerm_lb_nat_rule",
        "description": "Defines azurerm_lb_nat_rule resource",
        "body": [
            "resource \"azurerm_lb_nat_rule\" \"${MyResource}\" {",
            "   name = \"RDP Access\"",
            "   location = \"West US\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   loadbalancer_id = \"\\${azurerm_lb.test.id}\"",
            "   protocol = \"Tcp\"",
            "   frontend_port = 3389",
            "   backend_port = 3389",
            "   frontend_ip_configuration_name = \"PublicIPAddress\"",
            "}"
        ]
    },
    "azurerm_lb_nat_pool": {
        "prefix":"tf-azurerm_lb_nat_pool",
        "description": "Defines azurerm_lb_nat_pool resource",
        "body": [
            "resource \"azurerm_lb_nat_pool\" \"${MyResource}\" {",
            "   name = \"SampleApplication Pool\"",
            "   location = \"West US\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   loadbalancer_id = \"\\${azurerm_lb.test.id}\"",
            "   protocol = \"Tcp\"",
            "   frontend_port_start = 80",
            "   frontend_port_end = 81",
            "   backend_port = 8080",
            "   frontend_ip_configuration_name = \"PublicIPAddress\"",
            "}"
        ]
    },
    "azurerm_lb_probe": {
        "prefix":"tf-azurerm_lb_probe",
        "description": "Defines azurerm_lb_probe resource",
        "body": [
            "resource \"azurerm_lb_probe\" \"${MyResource}\" {",
            "   name = \"SSH Running Probe\"",
            "   location = \"West US\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   loadbalancer_id = \"\\${azurerm_lb.test.id}\"",
            "   port = 22",
            "}"
        ]
    },
    "azurerm_virtual_network": {
        "prefix":"tf-azurerm_virtual_network",
        "description": "Defines azurerm_virtual_network resource",
        "body": [
            "resource \"azurerm_virtual_network\" \"${MyResource}\" {",
            "   name = \"virtualNetwork1\"",
            "   location = \"West US\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   address_space = [\"10.0.0.0/16\"]",
            "   dns_servers = [\"10.0.0.4\"]",
            "}"
        ]
    },
    "azurerm_virtual_network_peering": {
        "prefix":"tf-azurerm_virtual_network_peering",
        "description": "Defines azurerm_virtual_network_peering resource",
        "body": [
            "resource \"azurerm_virtual_network_peering\" \"${MyResource}\" {",
            "   name = \"peer2to1\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   virtual_network_name = \"\\${azurerm_virtual_network.test1.name}\"",
            "   remote_virtual_network_id = \"\\${azurerm_virtual_network.test2.id}\"",
            "}"
        ]
    },
    "azurerm_network_security_group": {
        "prefix":"tf-azurerm_network_security_group",
        "description": "Defines azurerm_network_security_group resource",
        "body": [
            "resource \"azurerm_network_security_group\" \"${MyResource}\" {",
            "   name = \"acceptanceTestSecurityGroup1\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   location = \"West US\"",
            "}"
        ]
    },
    "azurerm_network_security_rule": {
        "prefix":"tf-azurerm_network_security_rule",
        "description": "Defines azurerm_network_security_rule resource",
        "body": [
            "resource \"azurerm_network_security_rule\" \"${MyResource}\" {",
            "   name = \"test123\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   network_security_group_name = \"\\${azurerm_network_security_group.test.name}\"",
            "}"
        ]
    },
    "azurerm_public_ip": {
        "prefix":"tf-azurerm_public_ip",
        "description": "Defines azurerm_public_ip resource",
        "body": [
            "resource \"azurerm_public_ip\" \"${MyResource}\" {",
            "   name = \"acceptanceTestPublicIp1\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   public_ip_address_allocation = \"static\"",
            "   location = \"West US\"",
            "}"
        ]
    },
    "azurerm_subnet": {
        "prefix":"tf-azurerm_subnet",
        "description": "Defines azurerm_subnet resource",
        "body": [
            "resource \"azurerm_subnet\" \"${MyResource}\" {",
            "   name = \"testsubnet\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   virtual_network_name = \"\\${azurerm_virtual_network.test.name}\"",
            "   address_prefix = \"10.0.1.0/24\"",
            "}"
        ]
    },
    "azurerm_local_network_gateway": {
        "prefix":"tf-azurerm_local_network_gateway",
        "description": "Defines azurerm_local_network_gateway resource",
        "body": [
            "resource \"azurerm_local_network_gateway\" \"${MyResource}\" {",
            "   name = \"backHome\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   location = \"\\${azurerm_resource_group.test.location}\"",
            "   gateway_address = \"12.13.14.15\"",
            "   address_space = [\"10.0.0.0/16\"]",
            "}"
        ]
    },
    "azurerm_network_interface": {
        "prefix":"tf-azurerm_network_interface",
        "description": "Defines azurerm_network_interface resource",
        "body": [
            "resource \"azurerm_network_interface\" \"${MyResource}\" {",
            "   name = \"acceptanceTestNetworkInterface1\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   location = \"West US\"",
            "}"
        ]
    },
    "azurerm_route_table": {
        "prefix":"tf-azurerm_route_table",
        "description": "Defines azurerm_route_table resource",
        "body": [
            "resource \"azurerm_route_table\" \"${MyResource}\" {",
            "   name = \"acceptanceTestNetworkInterface1\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   location = \"West US\"",
            "}"
        ]
    },
    "azurerm_route": {
        "prefix":"tf-azurerm_route",
        "description": "Defines azurerm_route resource",
        "body": [
            "resource \"azurerm_route\" \"${MyResource}\" {",
            "   name = \"acceptanceTestNetworkInterface1\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   route_table_name = \"\\${azurerm_route_table.test.name}\"",
            "   address_prefix = \"10.1.0.0/16\"",
            "   next_hop_type = \"vnetlocal\"",
            "}"
        ]
    },
    "azurerm_traffic_manager_profile": {
        "prefix":"tf-azurerm_traffic_manager_profile",
        "description": "Defines azurerm_traffic_manager_profile resource",
        "body": [
            "resource \"azurerm_traffic_manager_profile\" \"${MyResource}\" {",
            "   name = \"profile1\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   location = \"West US\"",
            "}"
        ]
    },
    "azurerm_traffic_manager_endpoint": {
        "prefix":"tf-azurerm_traffic_manager_endpoint",
        "description": "Defines azurerm_traffic_manager_endpoint resource",
        "body": [
            "resource \"azurerm_traffic_manager_endpoint\" \"${MyResource}\" {",
            "   name                = \"profile1\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   profile_name        = \"\\${azurerm_traffic_manager_profile.test.name}\"",
            "   target              = \"terraform.io\"",
            "   type                = \"externalEndpoints\"",
            "   weight              = 100",
            "}"
        ]
    },
    "azurerm_search_service": {
        "prefix":"tf-azurerm_search_service",
        "description": "Defines azurerm_search_service resource",
        "body": [
            "resource \"azurerm_search_service\" \"${MyResource}\" {",
            "   name = \"acceptanceTestSearchService1\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   location = \"West US\"",
            "   sku = \"standard\"",
            "}"
        ]
    },
    "azurerm_servicebus_namespace": {
        "prefix":"tf-azurerm_servicebus_namespace",
        "description": "Defines azurerm_servicebus_namespace resource",
        "body": [
            "resource \"azurerm_servicebus_namespace\" \"${MyResource}\" {",
            "   name = \"acceptanceTestSearchService1\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   location = \"West US\"",
            "   sku = \"basic\"",
            "}"
        ]
    },
    "azurerm_servicebus_subscription": {
        "prefix":"tf-azurerm_servicebus_subscription",
        "description": "Defines azurerm_servicebus_subscription resource",
        "body": [
            "resource \"azurerm_servicebus_subscription\" \"${MyResource}\" {",
            "   name = \"testSubscription\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   namespace_name = \"\\${azurerm_servicebus_namespace.test.name}\"",
            "   topic_name = \"\\${azurerm_servicebus_topic.test.name}\"",
            "   location = \"West US\"",
            "}"
        ]
    },
    "azurerm_servicebus_topic": {
        "prefix":"tf-azurerm_servicebus_topic",
        "description": "Defines azurerm_servicebus_topic resource",
        "body": [
            "resource \"azurerm_servicebus_topic\" \"${MyResource}\" {",
            "   name = \"testTopic\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   namespace_name = \"\\${azurerm_servicebus_namespace.test.name}\"",
            "   location = \"West US\"",
            "   enable_partitioning = true",
            "}"
        ]
    },
    "azurerm_sql_database": {
        "prefix":"tf-azurerm_sql_database",
        "description": "Defines azurerm_sql_database resource",
        "body": [
            "resource \"azurerm_sql_database\" \"${MyResource}\" {",
            "   name = \"testTopic\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   location = \"West US\"",
            "}"
        ]
    },
    "azurerm_sql_firewall_rule": {
        "prefix":"tf-azurerm_sql_firewall_rule",
        "description": "Defines azurerm_sql_firewall_rule resource",
        "body": [
            "resource \"azurerm_sql_firewall_rule\" \"${MyResource}\" {",
            "   name = \"FirewallRule1\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   server_name = \"\\${azurerm_sql_server.test.name}\"",
            "   start_ip_address = \"10.0.17.62\"",
            "   end_ip_address = \"10.0.17.62\"",
            "}"
        ]
    },
    "azurerm_sql_server": {
        "prefix":"tf-azurerm_sql_server",
        "description": "Defines azurerm_sql_server resource",
        "body": [
            "resource \"azurerm_sql_server\" \"${MyResource}\" {",
            "   name = \"MySqlServer\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"\\",
            "   location = \"West US\"",
            "   version = \"12.0\"",
            "   administrator_login = \"mradministrator\"",
            "   administrator_login_password = \"thisIsDog11\"",
            "}"
        ]
    },
    "azurerm_storage_account": {
        "prefix":"tf-azurerm_storage_account",
        "description": "Defines azurerm_storage_account resource",
        "body": [
            "resource \"azurerm_storage_account\" \"${MyResource}\" {",
            "   name = \"storageaccountname\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   location = \"West US\"",
            "   account_type = \"Standard_GRS\"",
            "}"
        ]
    },
    "azurerm_storage_container": {
        "prefix":"tf-azurerm_storage_container",
        "description": "Defines azurerm_storage_container resource",
        "body": [
            "resource \"azurerm_storage_container\" \"${MyResource}\" {",
            "   name = \"vhds\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   storage_account_name = \"\\${azurerm_storage_account.test.name}\"",
            "   container_access_type = \"private\"",
            "}"
        ]
    },
    "azurerm_storage_blob": {
        "prefix":"tf-azurerm_storage_blob",
        "description": "Defines azurerm_storage_blob resource",
        "body": [
            "resource \"azurerm_storage_blob\" \"${MyResource}\" {",
            "   name = \"sample.vhd\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   storage_account_name = \"\\${azurerm_storage_account.test.name}\"",
            "   storage_container_name = \"\\${azurerm_storage_container.test.name}\"",
            "}"
        ]
    },
    "azurerm_storage_queue": {
        "prefix":"tf-azurerm_storage_queue",
        "description": "Defines azurerm_storage_queue resource",
        "body": [
            "resource \"azurerm_storage_queue\" \"${MyResource}\" {",
            "   name = \"mysamplequeue\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   storage_account_name = \"\\${azurerm_storage_account.test.name}\"",
            "}"
        ]
    },
    "azurerm_storage_share": {
        "prefix":"tf-azurerm_storage_share",
        "description": "Defines azurerm_storage_share resource",
        "body": [
            "resource \"azurerm_storage_share\" \"${MyResource}\" {",
            "   name = \"sharename\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   storage_account_name = \"\\${azurerm_storage_account.test.name}\"",
            "   quota = 50",
            "}"
        ]
    },
    "azurerm_storage_table": {
        "prefix":"tf-azurerm_storage_table",
        "description": "Defines azurerm_storage_table resource",
        "body": [
            "resource \"azurerm_storage_table\" \"${MyResource}\" {",
            "   name = \"mysampletable\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   storage_account_name = \"\\${azurerm_storage_account.test.name}\"",
            "}"
        ]
    },
    "azurerm_template_deployment": {
        "prefix":"tf-azurerm_template_deployment",
        "description": "Defines azurerm_template_deployment resource",
        "body": [
            "resource \"azurerm_template_deployment\" \"${MyResource}\" {",
            "   name = \"acctesttemplate-01\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   deployment_mode = \"Complete\"",
            "   template_body = <<DEPLOY",
            "...",
            "DEPLOY",
            "}"
        ]
    },
    "azurerm_availability_set": {
        "prefix":"tf-azurerm_availability_set",
        "description": "Defines azurerm_availability_set resource",
        "body": [
            "resource \"azurerm_availability_set\" \"${MyResource}\" {",
            "   name = \"my-${MyResource}-name\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   location = \"West US\"",
            "}"
        ]
    },
    "azurerm_virtual_machine": {
        "prefix":"tf-azurerm_virtual_machine",
        "description": "Defines azurerm_virtual_machine resource",
        "body": [
            "resource \"azurerm_virtual_machine\" \"${MyResource}\" {",
            "   name = \"my-${MyResource}-name\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   location = \"West US\"",
            "   network_interface_ids = [\"\\${azurerm_network_interface.test.id}\"]",
            "   vm_size = \"Standard_A0\"\n",
            "   storage_image_reference {",
            "       publisher = \"Canonical\"",
            "       offer     = \"UbuntuServer\"",
            "       sku       = \"14.04.2-LTS\"",
            "       version   = \"latest\"",
            "   }\n",
            "   storage_os_disk {",
            "       name          = \"myosdisk1\"",
            "       vhd_uri       = \"\\${azurerm_storage_account.test.primary_blob_endpoint}\\${azurerm_storage_container.test.name}/myosdisk1.vhd\"",
            "       caching       = \"ReadWrite\"",
            "       create_option = \"FromImage\"",
            "   }\n",
            "   storage_data_disk {",
            "       name          = \"datadisk0\"",
            "       vhd_uri       = \"\\${azurerm_storage_account.test.primary_blob_endpoint}\\${azurerm_storage_container.test.name}/datadisk0.vhd\"",
            "       disk_size_gb  = \"1023\"",
            "       create_option = \"empty\"",
            "       lun           = 0",
            "   }\n",
            "   os_profile {",
            "       computer_name  = \"hostname\"",
            "       admin_username = \"testadmin\"",
            "       admin_password = \"Password1234!\"",
            "   }\n",
            "   os_profile_linux_config {",
            "       disable_password_authentication = false",
            "   }",
            "}"
        ]
    },
    "azurerm_virtual_machine_extension": {
        "prefix":"tf-azurerm_virtual_machine_extension",
        "description": "Defines azurerm_virtual_machine_extension resource",
        "body": [
            "resource \"azurerm_virtual_machine_extension\" \"${MyResource}\" {",
            "   name = \"my-${MyResource}-name\"",
            "   location = \"West US\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   virtual_machine_name = \"\\${azurerm_virtual_machine.test.name}\"",
            "   publisher = \"Microsoft.OSTCExtensions\"",
            "   type = \"CustomScriptForLinux\"",
            "   type_handler_version = \"1.2\"\n",
            "   settings = <<SETTINGS",
            "{",
            "    \"commandToExecute\": \"hostname\"",
            "}",
            "SETTINGS",
            "}"
        ]
    },
    "azurerm_virtual_machine_scale_set": {
        "prefix":"tf-azurerm_virtual_machine_scale_set",
        "description": "Defines azurerm_virtual_machine_scale_set resource",
        "body": [
            "resource \"azurerm_virtual_machine_scale_set\" \"${MyResource}\" {",
            "   name = \"my-${MyResource}-name\"",
            "   location = \"West US\"",
            "   resource_group_name = \"\\${azurerm_resource_group.test.name}\"",
            "   upgrade_policy_mode = \"Manual\"\n",
            "   sku {",
            "       name = \"Standard_A0\"",
            "       tier = \"Standard\"",
            "       capacity = 2",
            "   }\n",
            "   os_profile {",
            "       computer_name_prefix = \"testvm\"",
            "       admin_username = \"myadmin\"",
            "       admin_password = \"Passwword1234\"",
            "   }\n",
            "   os_profile_linux_config {",
            "       disable_password_authentication = true",
            "       ssh_keys {",
            "           path = \"/home/myadmin/.ssh/authorized_keys\"",
            "           key_data = \"\\${file(\"~/.ssh/demo_key.pub\")}\"",
            "       }",
            "   }\n",
            "   network_profile {",
            "       name = \"TestNetworkProfile\"",
            "       primary = true",
            "       ip_configuration {",
            "           name = \"TestIPConfiguration\"",
            "           subnet_id = \"\\${azurerm_subnet.test.id}\"",
            "       }",
            "   }\n",
            "   storage_profile_os_disk {",
            "       name = \"osDiskProfile\"",
            "       caching       = \"ReadWrite\"",
            "       create_option = \"FromImage\"",
            "       vhd_containers = [\"\\${azurerm_storage_account.test.primary_blob_endpoint}\\${azurerm_storage_container.test.name}\"]",
            "   }\n",
            "   storage_profile_image_reference {",
            "       publisher = \"Canonical\"",
            "       offer     = \"UbuntuServer\"",
            "       sku       = \"14.04.2-LTS\"",
            "       version   = \"latest\"",
            "   }",
            "}"
        ]
    },
    "cloudstack": {
        "prefix": "tf-cloudstack",
        "description": "define a cloudstack.",
        "body": [
            "cloudstack \"${aws}\" {",
            "   api_url = \"\\${var.cloudstack_api_url}\"",
            "   api_key = \"\\${var.cloudstack_api_key}\"",
            "   secret_key = \"\\${var.cloudstack_secret_key}\"",
            "}"
        ]
    },
    "cloudstack_affinity_group": {
        "prefix": "tf-cloudstack_affinity_group",
        "description": "define cloudstack_affinity_group resource.",
        "body": [
            "resource \"cloudstack_affinity_group\" \"${myResourceName}\" {",
            "   name = \"my-${myResourceName}\"",
            "   type = \"host anti-affinity\"",
            "}"
        ]
    },
    "cloudstack_disk": {
        "prefix": "tf-cloudstack_disk",
        "description": "define cloudstack_disk resource.",
        "body": [
            "resource \"cloudstack_disk\" \"${myResourceName}\" {",
            "   name = \"my-${myResourceName}\"",
            "   attach = \"true\"",
            "   disk_offering = \"custom\"",
            "   size = 50",
            "   virtual_machine = \"server-1\"",
            "   zone = \"zone-1\"",
            "}"
        ]
    },
    "cloudstack_egress_firewall": {
        "prefix": "tf-cloudstack_egress_firewall",
        "description": "define cloudstack_egress_firewall resource.",
        "body": [
            "resource \"cloudstack_egress_firewall\" \"${myResourceName}\" {",
            "   network_id = \"6eb22f91-7454-4107-89f4-36afcdf33021\"\n",
            "   rule {",
            "       cidr_list = [\"10.0.0.0/8\"]",
            "       protocol = \"tcp\"",
            "       ports = [\"80\", \"1000-2000\"]",
            "   }",
            "}"
        ]
    },
    "cloudstack_firewall": {
        "prefix": "tf-cloudstack_firewall",
        "description": "define cloudstack_firewall resource.",
        "body": [
            "resource \"cloudstack_firewall\" \"${myResourceName}\" {",
            "   network_id = \"6eb22f91-7454-4107-89f4-36afcdf33021\"\n",
            "   rule {",
            "       cidr_list = [\"10.0.0.0/8\"]",
            "       protocol = \"tcp\"",
            "       ports = [\"80\", \"1000-2000\"]",
            "   }",
            "}"
        ]
    },
    "cloudstack_instance": {
        "prefix": "tf-cloudstack_instance",
        "description": "define cloudstack_instance resource.",
        "body": [
            "resource \"cloudstack_instance\" \"${myResourceName}\" {",
            "   name = \"server-1\"",
            "   service_offering= \"small\"",
            "   network_id = \"6eb22f91-7454-4107-89f4-36afcdf33021\"",
            "   template = \"CentOS 6.5\"",
            "   zone = \"zone-1\"",
            "}"
        ]
    },
    "cloudstack_ipaddress": {
        "prefix": "tf-cloudstack_ipaddress",
        "description": "define cloudstack_ipaddress resource.",
        "body": [
            "resource \"cloudstack_ipaddress\" \"${myResourceName}\" {",
            "   network_id = \"6eb22f91-7454-4107-89f4-36afcdf33021\"\n",
            "}"
        ]
    },
    "cloudstack_loadbalancer_rule": {
        "prefix": "tf-cloudstack_loadbalancer_rule",
        "description": "define cloudstack_loadbalancer_rule resource.",
        "body": [
            "resource \"cloudstack_loadbalancer_rule\" \"${myResourceName}\" {",
            "   name = \"loadbalancer-rule-1\"",
            "   description = \"Loadbalancer rule 1\"",
            "   ip_address_id = \"30b21801-d4b3-4174-852b-0c0f30bdbbfb\"",
            "   algorithm = \"roundrobin\"",
            "   private_port = 80",
            "   public_port = 80",
            "   member_ids = [\"f8141e2f-4e7e-4c63-9362-986c908b7ea7\"]",
            "}"
        ]
    },
    "cloudstack_network": {
        "prefix": "tf-cloudstack_network",
        "description": "define cloudstack_network resource.",
        "body": [
            "resource \"cloudstack_network\" \"${myResourceName}\" {",
            "   name = \"test-network\"",
            "   cidr = \"10.0.0.0/16\"",
            "   network_offering = \"Default Network\"",
            "   zone = \"zone-1\"",
            "}"
        ]
    },
    "cloudstack_network_acl": {
        "prefix": "tf-cloudstack_network_acl",
        "description": "define cloudstack_network_acl resource.",
        "body": [
            "resource \"cloudstack_network_acl\" \"${myResourceName}\" {",
            "   name = \"test-acl\"",
            "   vpc_id = \"76f6e8dc-07e3-4971-b2a2-8831b0cc4cb4\"",
            "}"
        ]
    },
    "cloudstack_network_acl_rule": {
        "prefix": "tf-cloudstack_network_acl_rule",
        "description": "define cloudstack_network_acl_rule resource.",
        "body": [
            "resource \"cloudstack_network_acl_rule\" \"${myResourceName}\" {",
            "   acl_id = \"f3843ce0-334c-4586-bbd3-0c2e2bc946c6\"]]\n",
            "   rule {",
            "       action = \"allow\"",
            "       cidr_list = [\"10.0.0.0/8\"]",
            "       protocol = \"tcp\"",
            "       ports = [\"80\", \"1000-2000\"]",
            "       traffic_type = \"ingress\"",
            "   }",
            "}"
        ]
    },
    "cloudstack_nic": {
        "prefix": "tf-cloudstack_nic",
        "description": "define cloudstack_nic resource.",
        "body": [
            "resource \"cloudstack_nic\" \"${myResourceName}\" {",
            "   network_id = \"6eb22f91-7454-4107-89f4-36afcdf33021\"",
            "   ip_address = \"192.168.1.1\"",
            "   virtual_machine_id = \"f8141e2f-4e7e-4c63-9362-986c908b7ea7\"",
            "}"
        ]
    },
    "cloudstack_port_forward": {
        "prefix": "tf-cloudstack_port_forward",
        "description": "define cloudstack_port_forward resource.",
        "body": [
            "resource \"cloudstack_port_forward\" \"${myResourceName}\" {",
            "   ip_address_id = \"30b21801-d4b3-4174-852b-0c0f30bdbbfb\"\n",
            "   forward {",
            "       protocol = \"tcp\"",
            "       private_port = 80",
            "       public_port = 8080",
            "       virtual_machine_id = \"f8141e2f-4e7e-4c63-9362-986c908b7ea7\"",
            "   }",
            "}"
        ]
    },
    "cloudstack_private_gateway": {
        "prefix": "tf-cloudstack_private_gateway",
        "description": "define cloudstack_private_gateway resource.",
        "body": [
            "resource \"cloudstack_private_gateway\" \"${myResourceName}\" {",
            "   gateway = 10.0.0.1",
            "   ip_address = \"10.0.0.2\"",
            "   netmask = \"255.255.255.252\"",
            "   vlan = \"200\"",
            "   vpc_id = \"76f6e8dc-07e3-4971-b2a2-8831b0cc4cb4\"",
            "}"
        ]
    },
    "cloudstack_secondary_ipaddress": {
        "prefix": "tf-cloudstack_secondary_ipaddress",
        "description": "define cloudstack_secondary_ipaddress resource.",
        "body": [
            "resource \"cloudstack_secondary_ipaddress\" \"${myResourceName}\" {",
            "   virtual_machine_id = \"server-1\"",
            "}"
        ]
    },
    "cloudstack_security_group": {
        "prefix": "tf-cloudstack_security_group",
        "description": "define cloudstack_security_group resource.",
        "body": [
            "resource \"cloudstack_security_group\" \"${myResourceName}\" {",
            "   name = \"my-${myResourceName}\"",
            "   description = \"my-description-${myResourceName}\"",
            "}"
        ]
    },
    "cloudstack_security_group_rule": {
        "prefix": "tf-cloudstack_security_group_rule",
        "description": "define cloudstack_security_group_rule resource.",
        "body": [
            "resource \"cloudstack_security_group_rule\" \"${myResourceName}\" {",
            "   security_group_id = \"e340b62b-fbc2-4081-8f67-e40455c44bce\"\n",
            "   rule {",
            "       cidr_list = [\"0.0.0.0/0\"]",
            "       protocol  = \"tcp\"",
            "       ports     = [\"80\", \"443\"]",
            "   }\n",
            "   rule {",
            "       cidr_list                = [\"192.168.0.0/24\", \"192.168.1.0/25\"]",
            "       protocol                 = \"tcp\"",
            "       ports                    = [\"80-90\", \"443\"]",
            "       traffic_type             = \"egress\"",
            "       user_security_group_list = [\"group01\", \"group02\"]",
            "   }",
            "}"
        ]
    },
    "cloudstack_ssh_keypair": {
        "prefix": "tf-cloudstack_ssh_keypair",
        "description": "define cloudstack_ssh_keypair resource.",
        "body": [
            "resource \"cloudstack_ssh_keypair\" \"${myResourceName}\" {",
            "   name = \"my-${myResourceName}\"",
            "   public_key = \"\\${file(\"~/.ssh/id_rsa.pub\")}\"",
            "   project = \"myProject\"",
            "}"
        ]
    },
    "cloudstack_static_nat": {
        "prefix": "tf-cloudstack_static_nat",
        "description": "define cloudstack_static_nat resource.",
        "body": [
            "resource \"cloudstack_static_nat\" \"${myResourceName}\" {",
            "   name = \"my-${myResourceName}\"",
            "   ip_address_id = \"f8141e2f-4e7e-4c63-9362-986c908b7ea7\"",
            "   virtual_machine_id = \"6ca2a163-bc68-429c-adc8-ab4a620b1bb3\"",
            "}"
        ]
    },
    "cloudstack_static_route": {
        "prefix": "tf-cloudstack_static_route",
        "description": "define cloudstack_static_route resource.",
        "body": [
            "resource \"cloudstack_static_route\" \"${myResourceName}\" {",
            "   name = \"my-${myResourceName}\"",
            "   cidr = \"10.0.0.0/16\"",
            "   gateway_id = \"76f607e3-e8dc-4971-8831-b2a2b0cc4cb4\"",
            "}"
        ]
    },
    "cloudstack_template": {
        "prefix": "tf-cloudstack_template",
        "description": "define cloudstack_template resource.",
        "body": [
            "resource \"cloudstack_template\" \"${myResourceName}\" {",
            "   name = \"my-${myResourceName}\"",
            "   format= \"VHD\"",
            "   hypervisor = \"XenServer\"",
            "   os_type = \"CentOS 6.4 (64bit)\"",
            "   url = \"http://someurl.com/template.vhd\"",
            "   zone = \"zone-1\"",
            "}"
        ]
    },
    "cloudstack_vpc": {
        "prefix": "tf-cloudstack_vpc",
        "description": "define cloudstack_vpc resource.",
        "body": [
            "resource \"cloudstack_vpc\" \"${myResourceName}\" {",
            "   name = \"my-${myResourceName}\"",
            "   cidr = \"10.0.0.0/16\"",
            "   vpc_offering = \"Default VPC Offering\"",
            "   zone = \"zone-1\"",
            "}"
        ]
    },
    "cloudstack_vpn_gateway": {
        "prefix": "tf-cloudstack_vpn_gateway",
        "description": "define cloudstack_vpn_gateway resource.",
        "body": [
            "resource \"cloudstack_vpn_gateway\" \"${myResourceName}\" {",
            "   name = \"my-${myResourceName}\"",
            "   vpc_id = \"f8141e2f-4e7e-4c63-9362-986c908b7ea7\"",
            "}"
        ]
    },
    "cloudstack_vpn_customer_gateway": {
        "prefix": "tf-cloudstack_vpn_customer_gateway",
        "description": "define cloudstack_vpn_customer_gateway resource.",
        "body": [
            "resource \"cloudstack_vpn_customer_gateway\" \"${myResourceName}\" {",
            "   name = \"my-${myResourceName}\"",
            "   cidr = \"10.0.0.0/8\"",
            "   esp_policy = \"aes256-sha1\"",
            "   gateway = \"192.168.0.1\"",
            "   ike_policy = \"aes256-sha1\"",
            "   ipsec_psk = \"terraform\"",
            "}"
        ]
    },
    "cloudstack_vpn_connection": {
        "prefix": "tf-cloudstack_vpn_connection",
        "description": "define cloudstack_vpn_connection resource.",
        "body": [
            "resource \"cloudstack_vpn_connection\" \"${myResourceName}\" {",
            "   name = \"my-${myResourceName}\"",
            "   customer_gateway_id = \"8dab9381-ae73-48b8-9a3d-c460933ef5f7\"",
            "   vpn_gateway_id = \"a7900060-f8a8-44eb-be15-ea54cf499703\"",
            "}"
        ]
    },
}