{
    "aws_acm_certificate": {
        "prefix": "tf-aws_acm_certificate",
        "description": "Use this data source to get the ARN of a certificate in AWS Certificate Manager (ACM). The process of requesting and verifying a certificate in ACM requires some manual steps, which means that Terraform cannot automate the creation of ACM certificates. But using this data source, you can reference them by domain without having to hard code the ARNs as input.",
        "body": [
            "data \"aws_acm_certificate\" \"${example}\" {",
            "   domain = \"tf.${example}.com\"",
            "   statuses = [\"ISSUED]\"]",
            "}"
        ]
    },
    "aws_alb_listener": {
        "prefix": "tf-aws_alb_listener",
        "description": "Provides information about an Application Load Balancer Listener. This data source can prove useful when a module accepts an ALB Listener as an input variable and needs to know the ALB it is attached to, or other information specific to the listener in question.",
        "body": [
            "variable \"${listener_arn}\" {",
            "   type = \"string\"",
            "}\n",
            "data \"aws_alb_listener\" \"listener\" {",
            "   arn = \"\\${var.${listener_arn}}\"",
            "}"
        ]
    },
    "aws_ami": {
        "prefix": "tf-aws_ami",
        "description": "aws_ami - Use this data source to get the ID of a registered AMI for use in other resources.",
        "body": [
            "data \"aws_ami\" \"${ami-name}\" {",
            "\tmost_recent = true",
            "\texecutable_users = [\"self\"]",
            "\tfilter {",
            "\t\tname = \"owner-alias\"",
            "\t\tvalues = [\"amazon\"]",
            "\t}",
            "\tfilter {",
            "\t\tname = \"name\"",
            "\t\tvalues = [\"amzn-ami-vpc-nat*\"]",
            "\t}",
            "\towners = [\"self\"]",
            "}"
        ]
    },
    "aws_availability_zone": {
        "prefix":"tf-aws_availability_zone",
        "description": "aws_availability_zone provides details about a specific availablity zone (AZ) in the current region. This can be used both to validate an availability zone given in a variable and to split the AZ name into its component parts of an AWS region and an AZ identifier letter. The latter may be useful e.g. for implementing a consistent subnet numbering scheme across several regions by mapping both the region and the subnet letter to network numbers.",
        "body": [
            "variable \"${region_number}\" {",
            "   # Arbitrary mapping of region name to number to use in",
            "   # a VPC's CIDR prefix.",
            "   default = {",
            "       us-east-1      = 1",
            "       us-west-2      = 3",
            "       us-west-1      = 2",
            "       eu-central-1   = 4",
            "       ap-northeast-1 = 5",
            "   }",
            "}\n",
            "variable \"${az_number}\" {",
            "   # Assign a number to each AZ letter used in our configuration",
            "   default = {",
            "       a = 1",
            "       b = 2",
            "       c = 3",
            "       d = 4",
            "       e = 5",
            "       f = 6",
            "   }",
            "}\n",
            "# Retrieve the AZ where we want to create network resources",
            "# This must be in the region selected on the AWS provider.",
            "data \"aws_availability_zone\" \"${example}\" {",
            "   name = \"eu-central-1a\"",
            "}\n",
            "# Create a VPC for the region associated with the AZ",
            "resource \"aws_vpc\" \"${example}\" {",
            "   cidr_block = \"\\${cidrsubnet(\"10.0.0.0/8\", 4, var.${region_number}[data.aws_availability_zone.${example}.region])}\"",
            "}\n",
            "# Create a subnet for the AZ within the regional VPC",
            "resource \"aws_subnet\" \"${example}\" {",
            "   vpc_id     = \"${aws_vpc.${example}.id}\"",
            "   cidr_block = \"$\\{cidrsubnet(aws_vpc.${example}.cidr_block, 4, var.${az_number}[data.aws_availability_zone.name_suffix])}\"",
            "}"
        ]
    },
    "aws_availability_zones": {
        "prefix":"tf-aws_availability_zones",
        "description": "aws_ecs_container_definition - The Availability Zones data source allows access to the list of AWS Availability Zones which can be accessed by an AWS account within the region configured in the provider.",
        "body": [
            "# State can be either: available, information, impaired, or unavailable",
            "data \"aws_availability_zones\" \"available\" {}"
        ]
    },
    "aws_caller_identity": {
        "prefix":"tf-aws_caller_identity",
        "description": "aws_caller_identity - Use this data source to get the access to the effective Account ID in which Terraform is working.",
        "body": [
            "data \"aws_caller_identity\" \"current\" { }\n",
            "output \"account_id\" {",
            "\tvalue = \"\\${data.aws_caller_identity.current.account_id}\"",
            "}"
        ]
    },
    "aws_cloudformation_stack": {
        "prefix":"tf-aws_cloudformation_stack",
        "description": "aws_cloudformation_stack - The CloudFormation Stack data source allows access to stack outputs and other useful data including the template body..",
        "body": [
            "data \"aws_cloudformation_stack\" \"network\" {",
            "   name = \"${my-network-stack}\"",
            "}\n",
            "resource \"aws_instance\" \"${web}\" {",
            "   ami = \"${ami-abb07bcb}\"",
            "   instance_type = \"${t1.micro}\"",
            "   subnet_id = \"\\${data.aws_cloudformation_stack.network.outputs[\"SubnetId\"]}\"",
            "   tags {",
            "       Name = \"${HelloWorld}\"",
            "   }",
            "}"
        ]
    },
    "aws_ebs_volume": {
        "prefix":"tf-aws_ebs_volume",
        "description": "Use this data source to get information about an EBS volume for use in other resources.",
        "body": [
            "data \"aws_ebs_volume\" \"${ebs_volume}\" {",
            "    most_recent = true",
            "    filter {",
            "        name = \"volume-type\"",
            "        values = [\"gp2\"]",
            "    }",
            "    filter {",
            "        name = \"tag:${Name}\"",
            "        values = [\"${Example}\"]",
            "    }",
            "}"
        ]
    },
    "aws_ecs_container_definition": {
        "prefix":"tf-aws_ecs_container_definition",
        "description": "aws_ecs_container_definition - The ECS container definition data source allows access to details of a specific container within an AWS ECS service.",
        "body": [
            "data \"aws_ecs_container_definition\" \"ecs-${name}\" {",
            "   task_definition = \"${aws_ecs_task_definition.${name}.id}\"",
            "   container_name = \"${name}\"",
            "}"
        ]
    },
    "aws_elb_service_account": {
        "prefix":"tf-aws_elb_service_account",
        "description": "aws_elb_service_account - Use this data source to get the Account ID of the AWS Elastic Load Balancing Service Account in a given region for the purpose of whitelisting in S3 bucket policy.",
        "body": [
            "data \"aws_elb_service_account\" \"${main}\" { }\n",
            "# Example\n",
            "resource \"aws_s3_bucket\" \"elb_logs\" {",
            "   bucket = \"${my-elb-tf-test-bucket}\"",
            "   acl = \"private\"",
            "   policy = <<POLICY",
            "{",
            "   \"Id\": \"Policy\",",
            "   \"Version\": \"2012-10-17\",",
            "   \"Statement\": [",
            "   {",
            "       \"Action\": [",
            "           \"s3:PutObject\"",
            "       ],",
            "       \"Effect\": \"Allow\",",
            "       \"Resource\": \"arn:aws:s3:::my-elb-tf-test-bucket/AWSLogs/*\",",
            "       \"Principal\": {",
            "           \"AWS\": [",
            "               \"\\${data.aws_elb_service_account.${main}.id}\"",
            "           ]",
            "       }",
            "   }",
            "   ]",
            "}",
            "POLICY",
            "}\n",
            "resource \"aws_elb\" \"${bar}\" {",
            "   name = \"${my-foobar-terraform-elb}\"",
            "   availability_zones = [\"${us-west-2a}\"]\n",
            "   access_logs {",
            "       bucket = \"\\${aws_s3_bucket.elb_logs.bucket}\"",
            "       interval = 5",
            "   }\n",

            "   listener {",
            "       instance_port = 8000",
            "       instance_protocol = \"http\"",
            "       lb_port = 80",
            "       lb_protocol = \"http\"",
            "   }",
            "}"
        ]
    },
    "aws_iam_policy_document": {
        "prefix":"tf-aws_iam_policy_document",
        "description": "aws_iam_policy_document - Generates an IAM policy document in JSON format.",
        "body": [
            "data \"aws_iam_policy_document\" \"${example}\" {",
            "   statement {",
            "       sid = \"1\"",
            "       actions = [",
            "           \"s3:ListAllMyBuckets\",",
            "           \"s3:GetBucketLocation\",",
            "       ]",
            "       resources = [",
            "           \"arn:aws:s3:::*\",",
            "       ]",
            "   }\n",
            "   statement {",
            "       actions = [",
            "           \"s3:ListBucket\",",
            "       ]",
            "       resources = [",
            "           \"arn:aws:s3:::\\${var.s3_bucket_name}\",",
            "       ]",
            "       condition {",
            "           test = \"StringLike\"",
            "           variable = \"s3:prefix\"",
            "           values = [",
            "               \"\",",
            "               \"home/\",",
            "               \"home/&{aws:username}/\",",
            "           ]",
            "       }",
            "   }\n",
            "   statement {",
            "       actions = [",
            "           \"s3:*\",",
            "       ]",
            "       resources = [",
            "           \"arn:aws:s3:::\\${var.s3_bucket_name}/home/&{aws:username}\",",
            "           \"arn:aws:s3:::\\${var.s3_bucket_name}/home/&{aws:username}/*\",",
            "       ]",
            "   }",
            "}\n",

            "resource \"aws_iam_policy\" \"${example}\" {",
            "   name = \"example_policy\"",
            "   path = \"/\"",
            "   policy = \"\\${data.aws_iam_policy_document.${example}.json}\"",
            "}"
        ]
    },
    "aws_ip_ranges": {
        "prefix":"tf-aws_ip_ranges",
        "description": "Use this data source to get the IP ranges of various AWS products and services.",
        "body": [
            "data \"aws_ip_ranges\" \"${european_ec2}\" {",
            "   regions = [ \"eu-west-1\", \"eu-central-1\" ]",
            "   services = [ \"ec2\" ]",
            "}\n",
            "resource \"aws_security_group\" \"from_europe\" {",
            "   name = \"from_europe\"\n",
            "   ingress {",
            "       from_port = \"443\"",
            "       to_port = \"443\"",
            "       protocol = \"tcp\"",
            "       cidr_blocks = [ \"\\${data.aws_ip_ranges.${european_ec2}.cidr_blocks}\" ]",
            "   }\n",
            "   tags {",
            "       CreateDate = \"\\${data.aws_ip_ranges.${european_ec2}.create_date}\"",
            "       SyncToken = \"\\${data.aws_ip_ranges.${european_ec2}.sync_token}\"",
            "   }\n",
            "}"
        ]
    },
    "aws_prefix_list": {
        "prefix":"tf-aws_prefix_list",
        "description": "aws_prefix_list provides details about a specific prefix list (PL) in the current region. This can be used both to validate a prefix list given in a variable and to obtain the CIDR blocks (IP address ranges) for the associated AWS service. The latter may be useful e.g. for adding network ACL rules.",
        "body": [
            "resource \"aws_vpc_endpoint\" \"${private_s3}\" {",
            "    vpc_id = \"\\${aws_vpc.foo.id}\"",
            "    service_name = \"com.amazonaws.us-west-2.s3\"",
            "}\n",
            "data \"aws_prefix_list\" \"${private_s3}\" {",
            "   prefix_list_id = \"\\${aws_vpc_endpoint.${private_s3}.prefix_list_id}\"",
            "}\n",
            "resource \"aws_network_acl\" \"${bar}\" {",
            "    vpc_id = \"\\${aws_vpc.foo.id}\"",
            "}\n",
            "resource \"aws_network_acl_rule\" \"${private_s3}\" {",
            "    network_acl_id = \"\\${aws_network_acl.${bar}.id}\"",
            "    rule_number = 200",
            "    egress = false",
            "    protocol = \"tcp\"",
            "    rule_action = \"allow\"",
            "    cidr_block = \"\\${data.aws_prefix_list.${private_s3}.cidr_blocks[0]}\"",
            "    from_port = 443",
            "    to_port = 443",
            "}"
        ]
    },
    "aws_redshift_service_account": {
        "prefix":"tf-aws_redshift_service_account",
        "description": "Use this data source to get the Service Account ID of the AWS Redshift Account in a given region for the purpose of allowing Redshift to store audit data in S3.",
        "body": [
            "data \"aws_redshift_service_account\" \"${main}\" { }\n",
            "resource \"aws_s3_bucket\" \"bucket\" {",
            "   bucket = \"tf-redshift-logging-test-bucket\"",
            "   force_destroy = true",
            "   policy = <<EOF",
            "{",
            "   \"Version\": \"2008-10-17\",",
            "   \"Statement\": [",
            "       {",
            "           \"Sid\": \"Put bucket policy needed for audit logging\",",
            "           \"Effect\": \"Allow\",",
            "           \"Principal\": {",
            "               \"AWS\": \"arn:aws:iam:\\${data.aws_redshift_service_account.${main}.id}:user/logs\"",
            "           },",
            "           \"Action\": \"s3:PutObject\",",
            "           \"Resource\": \"arn:aws:s3:::tf-redshift-logging-test-bucket\/*\"",
            "       },",
            "       {",
            "           \"Sid\": \"Get bucket policy needed for audit logging \",",
            "           \"Effect\": \"Allow\",",
            "           \"Principal\": {",
            "               \"AWS\": \"arn:aws:iam:\\${data.aws_redshift_service_account.${main}.id}:user/logs\"",
            "           },",
            "           \"Action\": \"s3:GetBucketAcl\",",
            "           \"Resource\": \"arn:aws:s3:::tf-redshift-logging-test-bucket\"",
            "       }",
            "  ]",
            "}",
            "EOF",
            "}"
        ]
    },
    "aws_region": {
        "prefix":"tf-aws_region",
        "description": "aws_region provides details about a specific AWS region. As well as validating a given region name (and optionally obtaining its endpoint) this resource can be used to discover the name of the region configured within the provider. The latter can be useful in a child module which is inheriting an AWS provider configuration from its parent module.",
        "body": [
            "data \"aws_region\" \"current\" {",
            "    current = true",
            "}"
        ]
    }
}